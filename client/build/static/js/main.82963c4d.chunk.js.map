{"version":3,"sources":["UltimateStyle.png","utils/setAuthToken.js","actions/authActions.js","actions/types.js","components/PrivateRoute.js","components/navigation.js","components/register/registerPopup.js","components/landing.js","components/login/login.js","components/register/registerUser.js","components/register/registerStylist.js","reducers/errorReducer.js","reducers/authReducer.js","reducers/index.js","store.js","components/landing/serviceBox.js","components/loading.js","components/landing/userLanding.js","components/rating/rating.js","components/search/stylistInfo.js","components/rating/ratingFilter.js","components/search/searchFilter.js","components/search/map.js","components/search/stylistsList.js","components/changePassword.js","components/profile/reviewBox.js","components/profile/bookingPopup.js","components/profile/servicePopup.js","components/profile/services.js","components/profile/stylistProfile.js","components/profile/editProfile.js","components/sendPassword.js","components/stylistNav.js","components/stylist/servicesList.js","components/hooks/InputHook.js","components/stylist/addServices.js","components/stylist/servicesOffered.js","components/stylist/stylistCalendar.js","components/profile/appointmentsList.js","routes.js","components/profile/userProfile.js","components/stylistLanding.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","setAuthToken","token","axios","defaults","headers","common","baseURL","setCurrentUser","user","type","payload","logoutUser","dispatch","localStorage","removeItem","connect","state","auth","Component","component","rest","render","props","isAuthenticated","to","Navigation","useState","name","setName","useSelector","useDispatch","role","Navbar","bg","variant","expand","Brand","href","id","Toggle","aria-controls","Collapse","Nav","className","Link","NavDropdown","title","Item","searchURL","Form","inline","FormControl","onChange","event","target","value","placeholder","Button","onClick","RegisterPopup","Modal","centered","Header","closeButton","Title","Body","Landing","modalShow","setModalShow","style","height","width","src","require","show","onHide","Login","onCheck","e","isStylist","setState","onSubmit","preventDefault","userData","email","password","login","error","this","history","push","nextProps","console","log","classnames","invalid","emailnotfound","htmlFor","passwordincorrect","class","checked","post","then","res","data","setItem","decoded","jwt_decode","catch","err","response","RegisterUser","newUser","firstName","lastName","password2","registerUser","required","autoFocus","withRouter","RegisterStylist","newUserStylist","texasID","businessName","photo","address","registerStylist","paddingLeft","noValidate","borderRadius","letterSpacing","marginTop","initialState","isEmpty","loading","rootReducer","combineReducers","action","middleware","thunk","store","createStore","undefined","compose","applyMiddleware","ServiceBox","imageURL","service","alt","Loading","color","UserLanding","userId","numAppointments","setNumAppointments","isLoading","setIsLoading","useEffect","a","get","returnedAppointments","appointments","future","forEach","appointment","endDate","Date","now","toLocaleString","length","fetchAppointments","imageURLs","map","index","key","Rating","rating","x","StylistInfo","stylist","_id","textDecoration","backgroundColor","textColor","text","average","reviews","RatingFilter","queries","listStyleType","SearchFilter","LocationPin","lng","lat","onClickLocation","clicked","icon","locationIcon","number","services","i","toString","Map","location","stylists","center","setCenter","zoom","setTarget","isMountRef","useRef","current","useIsMount","bootstrapURLKeys","defaultZoom","onDrag","coordinates","handleClick","StylistsList","setStylists","useParams","params","returnedStylists","getStylists","filter","hasOwnProperty","ChangePassword","useStore","getState","newPassword","setNewPassword","onSend","put","ReviewBox","review","reviewerName","score","notes","BookingPopup","appointmentId","useHistory","onBookAppointment","alert","ServicePopup","nextModalShow","setNextModalShow","startDate","Services","stylistId","setAppointments","availableAppointments","getAppointments","description","price","StylistProfile","setStylist","stylistData","fetchStylist","EditProfile","setFirstName","setLastName","setAddress","setNumber","config","Authorization","jwtToken","fetchUser","SendPassword","setEmail","StylistNav","ServicesList","cateogry","useInput","initialValue","setValue","reset","bind","AddServices","bindName","resetName","bindDescription","resetDescription","bindPrice","resetPrice","category","bindCateogry","resetCategory","callAxios","ServicesOffered","StylistCalendar","currentDate","URL","match","addedAppointment","appointmentChanges","editingAppointment","getStylistByID","Promise","resolve","reject","commitChanges","changeAddedAppointment","changeAppointmentChanges","changeEditingAppointment","added","changed","deleted","startingAddedId","Paper","defaultCurrentDate","defaultCurrentViewName","onCommitChanges","onAddedAppointmentChange","onAppointmentChangesChange","onEditingAppointmentChange","startDayHour","endDayHour","React","AppointmentsList","ROUTES","path","setUser","futureAppointments","setFutureAppointments","pastAppointments","setPastAppointments","past","appointmentsOrAdd","padding","currentTime","exp","window","App","exact","route","Boolean","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.82963c4d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/UltimateStyle.7adb92eb.png\";","import axios from \"axios\";\r\nconst setAuthToken = token => {\r\n    if (token) {\r\n        // Apply authorization token to every request if logged in\r\n        axios.defaults.headers.common[\"Authorization\"] = token;\r\n    } else {\r\n        // Delete auth header\r\n        delete axios.defaults.headers.common[\"Authorization\"];\r\n    }\r\n};\r\nexport default setAuthToken;","import axios from \"axios\";\r\nimport setAuthToken from \"../utils/setAuthToken\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport {\r\n    GET_ERRORS,\r\n    SET_CURRENT_USER,\r\n    USER_LOADING\r\n} from \"./types\";\r\n// Register User\r\nconst api = \"http://localhost:8000\";\r\naxios.defaults.baseURL = api;\r\nexport const registerUser = (userData, history) => dispatch => {\r\n    axios\r\n        .post(\"/users/register\", userData)\r\n        .then(() => history.push(\"/login\")) // re-direct to login on successful register\r\n        .catch(err =>\r\n            dispatch({\r\n                type: GET_ERRORS,\r\n                payload: err.response.data\r\n            })\r\n        );\r\n};\r\n\r\n// Register Stylist\r\nexport const registerStylist = (userData, history) => dispatch => {\r\n    axios\r\n        .post(\"/stylists/register\", userData)\r\n        .then(() => history.push(\"/login\")) // re-direct to login on successful register\r\n        .catch(err =>\r\n            dispatch({\r\n                type: GET_ERRORS,\r\n                payload: err.response.data\r\n            })\r\n        );\r\n};\r\n\r\n//registerSylistUserWillBe updated once I figure out how to correctlyCheck the texas ID database\r\nexport const registerUserStylist = (userData, history) => dispatch => {\r\n    axios\r\n        .post(`/stylists/register/create`, userData)\r\n        .then(() => history.push(\"/stylists/stylistLanding\")) // re-direct to login on successful register\r\n        .catch(err =>\r\n            dispatch({\r\n                type: GET_ERRORS,\r\n                payload: err.response.data\r\n            })\r\n        );\r\n};\r\n// Change Password\r\nexport const changePassword = (userData, history) => dispatch => {\r\n    axios\r\n        .post(\"/users/changePassword\", userData)\r\n        .then(() => history.push(\"/home\")) // re-direct to home after changing password\r\n        .catch(err =>\r\n            dispatch({\r\n                type: GET_ERRORS,\r\n                payload: err.response.data\r\n            })\r\n        );\r\n};\r\nexport const login = userData => dispatch => {\r\n    if (userData.isStylist === true){\r\n        axios\r\n        .post(\"/stylists/login\", userData)\r\n        .then(res => {\r\n            // Save to localStorage\r\n// Set token to localStorage\r\n            // console.log(res.data)\r\n            const {token} = res.data;\r\n            localStorage.setItem(\"jwtToken\", token);\r\n\r\n            // Set token to Auth header\r\n            setAuthToken(token);\r\n            // Decode token to get user data\r\n            const decoded = jwt_decode(token);\r\n            // Set current user\r\n            dispatch(setCurrentUser(decoded));\r\n        })\r\n        .catch(err => {\r\n                dispatch({\r\n                    type: GET_ERRORS,\r\n                    payload: err.response.data\r\n                })\r\n            }\r\n        );\r\n    } else {\r\n    axios\r\n        .post(\"/users/login\", userData)\r\n        .then(res => {\r\n            // Save to localStorage\r\n// Set token to localStorage\r\n            // console.log(res.data)\r\n            const {token} = res.data;\r\n            localStorage.setItem(\"jwtToken\", token);\r\n\r\n            // Set token to Auth header\r\n            setAuthToken(token);\r\n            // Decode token to get user data\r\n            const decoded = jwt_decode(token);\r\n            // Set current user\r\n            dispatch(setCurrentUser(decoded));\r\n        })\r\n        .catch(err => {\r\n                dispatch({\r\n                    type: GET_ERRORS,\r\n                    payload: err.response.data\r\n                })\r\n            }\r\n        );\r\n    }\r\n};\r\n// Login - get user token\r\nexport const loginUser = userData => dispatch => {\r\n    axios\r\n        .post(\"/users/login\", userData)\r\n        .then(res => {\r\n            // Save to localStorage\r\n// Set token to localStorage\r\n            // console.log(res.data)\r\n            const {token} = res.data;\r\n            localStorage.setItem(\"jwtToken\", token);\r\n\r\n            // Set token to Auth header\r\n            setAuthToken(token);\r\n            // Decode token to get user data\r\n            const decoded = jwt_decode(token);\r\n            // Set current user\r\n            dispatch(setCurrentUser(decoded));\r\n        })\r\n        .catch(err => {\r\n                dispatch({\r\n                    type: GET_ERRORS,\r\n                    payload: err.response.data\r\n                })\r\n            }\r\n        );\r\n};\r\nexport const loginStylist = userData => dispatch => {\r\n    axios\r\n        .post(\"/stylists/login\", userData)\r\n        .then(res => {\r\n            // Save to localStorage\r\n// Set token to localStorage\r\n            // console.log(res.data)\r\n            const {token} = res.data;\r\n            localStorage.setItem(\"jwtToken\", token);\r\n\r\n            // Set token to Auth header\r\n            setAuthToken(token);\r\n            // Decode token to get user data\r\n            const decoded = jwt_decode(token);\r\n            // Set current user\r\n            dispatch(setCurrentUser(decoded));\r\n        })\r\n        .catch(err => {\r\n                dispatch({\r\n                    type: GET_ERRORS,\r\n                    payload: err.response.data\r\n                })\r\n            }\r\n        );\r\n};\r\n// Set logged in user\r\nexport const setCurrentUser = user => {\r\n    return {\r\n        type: SET_CURRENT_USER,\r\n        payload: user\r\n    };\r\n};\r\n// User loading\r\nexport const setUserLoading = () => {\r\n    return {\r\n        type: USER_LOADING\r\n    };\r\n};\r\n// Log user out\r\nexport const logoutUser = () => dispatch => {\r\n    // Remove token from local storage\r\n    localStorage.removeItem(\"jwtToken\");\r\n    // Remove auth header for future requests\r\n    setAuthToken(false);\r\n    // Set current user to empty object {} which will set isAuthenticated to false\r\n    dispatch(setCurrentUser({}));\r\n\r\n};","export const GET_ERRORS = \"GET_ERRORS\";\r\nexport const USER_LOADING = \"USER_LOADING\";\r\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";\r\nexport const LOGOUT = 'LOGOUT';\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nconst PrivateRoute = ({ component: Component, auth, ...rest }) => (\r\n    <Route\r\n        {...rest}\r\n        render={props =>\r\n            auth.isAuthenticated === true ? (\r\n                <Component {...props} />\r\n            ) : (\r\n                <Redirect to=\"/\" />\r\n            )\r\n        }\r\n    />\r\n);\r\nPrivateRoute.propTypes = {\r\n    auth: PropTypes.object.isRequired\r\n};\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth\r\n});\r\nexport default connect(mapStateToProps)(PrivateRoute);","import React, {useState} from 'react';\r\nimport {Button, Navbar, Nav, NavDropdown, Form, FormControl} from \"react-bootstrap\"\r\nimport {useDispatch, useSelector, useStore} from \"react-redux\";\r\nimport {logoutUser} from \"../actions/authActions\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst Navigation = () => {\r\n    const [name, setName] = useState('');\r\n    const searchURL = '/stylists/search/'\r\n    const user = useSelector(state => state.auth)\r\n    const dispatch = useDispatch()\r\n    const onLogout = () => {\r\n        dispatch(logoutUser())\r\n    }\r\n    if (user.role === \"stylist\"){\r\n        return (       \r\n             <div>\r\n            <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\">\r\n                <Navbar.Brand href={`/stylistLanding/stylistId=${user.id}`}></Navbar.Brand>\r\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\"/>\r\n                <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                    <Nav className=\"mr-auto\">\r\n                        <Nav.Link href={`/stylists/appointments/upcoming/stylistId=${user.id}`}>Upcoming Appointments</Nav.Link>\r\n                        <Nav.Link href={`/stylists/appointments/past/stylistId=${user.id}`}>Past Appointments</Nav.Link>\r\n                        <Nav.Link href={`/services/servicesOffered/stylistId=${user.id}`}>Services Offered</Nav.Link>\r\n                        <Nav.Link href={`/stylists/stylistCalendar/${user.id}`}>Calendar </Nav.Link>\r\n                        <Nav.Link href={`/stylistLanding/stylistId=${user.id}`}>TBD</Nav.Link>\r\n                    </Nav>\r\n                </Navbar.Collapse>\r\n            </Navbar>\r\n        </div>\r\n        );\r\n    } else {\r\n    return (\r\n        <div>\r\n            {/*make nav bar bigger brigher*/}\r\n            <Navbar bg=\"light\" variant=\"light\" expand=\"lg\" className=\"border-bottom\">\r\n                <Navbar.Brand href=\"/userLanding\">Ultimate Style</Navbar.Brand>\r\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\"/>\r\n                <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                    <Nav className=\"mr-auto\">\r\n                        <NavDropdown title=\"Services\" id=\"basic-nav-dropdown\">\r\n                            {/*<NavDropdown.Item href=\"/retail\">Overview</NavDropdown.Item>*/}\r\n                            <NavDropdown.Item href={searchURL+'name=&service=haircuts&min='}>Haircuts</NavDropdown.Item>\r\n                            <NavDropdown.Item href={searchURL+'name=&service=waxing&min='}>Waxing</NavDropdown.Item>\r\n                        </NavDropdown>\r\n                        <Nav.Link href=\"/userProfile\">My Profile</Nav.Link>\r\n                    </Nav>\r\n                </Navbar.Collapse>\r\n                <Form inline>\r\n                    <FormControl\r\n                        onChange={event => setName(event.target.value)}\r\n                        value={name}\r\n                        type=\"text\"\r\n                        placeholder=\"Stylist\"\r\n                        className=\"mr-sm-2\"\r\n                    />\r\n                </Form>\r\n                <a href={`${searchURL}name=${name}&service=&min=`}><Button variant=\"dark\">Search</Button></a>\r\n                {user.isAuthenticated ? <button onClick={onLogout} className=\"btn btn-warning mx-2\">Logout</button> : <></>}\r\n\r\n            </Navbar>\r\n\r\n        </div>\r\n    );\r\n    }\r\n}\r\n\r\nexport default Navigation;","import React from 'react';\r\nimport {Link} from \"react-router-dom\";\r\nimport {Modal} from \"react-bootstrap\";\r\n\r\n// The popup when user clicks on \"register\" on the landing page\r\nconst RegisterPopup = props => {\r\n    return (\r\n        <div>\r\n            <Modal\r\n                {...props}\r\n                centered\r\n            >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>\r\n                        Register for Ultimate Style\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body className=\"mx-auto\">\r\n                    <Link to=\"/user/register\" className=\"btn btn-primary btn-lg mt-4 mb-4\">Register as a Client</Link>\r\n                    <h5 className=\"mx-auto text-center\">Or</h5>\r\n                    <Link to=\"/stylist/register\" className=\"btn btn-primary btn-lg mt-4 mb-4\">Register as a Stylist</Link>\r\n                </Modal.Body>\r\n            </Modal>\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\nexport default RegisterPopup;\r\n","import React, {useState} from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport RegisterPopup from \"./register/registerPopup\";\r\n\r\nconst Landing = () => {\r\n    const [modalShow, setModalShow] = useState(false);\r\n\r\n    return (\r\n        <div style={{ height: \"75vh\" }} className=\"container\">\r\n            <div className=\"d-flex justify-content-center flex-column\">\r\n                <img className=\"mx-auto\" style={{ width: \"100px\", height: \"100px\"}} src={require(\"../UltimateStyle.png\" )}/>\r\n                <h1 className=\"mx-auto\">\r\n                    <b>Welcome</b> to Ultimate Style\r\n                </h1>\r\n                <p className=\"mx-auto text-secondary\">\r\n                    Review and book stylist made easy\r\n                </p>\r\n                <div className=\"mx-auto d-flex justify-content-center\">\r\n                    <Link\r\n                        to=\"/login\"\r\n                        className=\"btn btn-primary m-2\"\r\n                    >Log In</Link>\r\n                    {/*<Link*/}\r\n                    {/*    to=\"/register\"*/}\r\n                    {/*    style={{*/}\r\n                    {/*        width: \"140px\",*/}\r\n                    {/*        borderRadius: \"3px\",*/}\r\n                    {/*        letterSpacing: \"1.5px\",*/}\r\n                    {/*        */}\r\n                    {/*    }}*/}\r\n                    {/*    className=\"btn btn-large btn-flat waves-effect blue black-text m-2\"*/}\r\n                    {/*>Register</Link>*/}\r\n                    <button onClick={() => setModalShow(true)} className=\"btn btn-primary m-2\">\r\n                        Register\r\n                    </button>\r\n                    <RegisterPopup\r\n                        show={modalShow}\r\n                        onHide={() => setModalShow(false)}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n\r\n}\r\n\r\nexport default Landing;\r\n","\r\n\r\nimport React, {Component} from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport {connect} from \"react-redux\";\r\nimport {login} from \"../../actions/authActions\";\r\nimport classnames from \"classnames\";\r\nimport \"../register/register.css\"\r\nimport RegisterPopup from \"../register/registerPopup\";\r\n\r\nclass Login extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            email: \"\",\r\n            password: \"\",\r\n            modalShow: false,\r\n            isStylist: false,\r\n            error: {}\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        // If logged in and user navigates to Login page, should redirect them to dashboard\r\n        if (this.props.auth.isAuthenticated) {\r\n            if (this.state.isStylist === true){\r\n            this.props.history.push(`/stylists/stylistLanding/stylistId=${this.props.auth.user.id}`); // push user to dashboard when they login\r\n            } else {\r\n                this.props.history.push(\"/userLanding\");\r\n            }\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        if (nextProps.auth.isAuthenticated) {\r\n            console.log(nextProps.auth);\r\n            if (this.state.isStylist === true){\r\n            this.props.history.push(`/stylists/stylistLanding/stylistId=${nextProps.auth.user.id}`); // push user to dashboard when they login\r\n            } else {\r\n                this.props.history.push(\"/userLanding\");\r\n            }\r\n        }\r\n        if (nextProps.error) {\r\n            this.setState({\r\n                error: nextProps.error\r\n            });\r\n        }\r\n    }\r\n    onCheck = e => {\r\n        if (this.state.isStylist === false){\r\n        this.setState(({isStylist: true}));\r\n        } else {\r\n            this.setState(({isStylist: false}));\r\n        }\r\n    }\r\n    onChange = e => {\r\n        this.setState({[e.target.id]: e.target.value});\r\n    };\r\n    onSubmit = e => {\r\n        e.preventDefault();\r\n        const userData = {\r\n            email: this.state.email,\r\n            password: this.state.password,\r\n            isStylist: this.state.isStylist\r\n        };\r\n        this.props.login(userData); // since we handle the redirect within our component, we don't need to pass in this.props.history as a parameter\r\n    };\r\n\r\n    render() {\r\n        const error = this.state.error;\r\n        console.log(error.error)\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-5 col-5 mx-auto\">\r\n                        <div className=\"card card-signin flex-row my-5\">\r\n                            <div className=\"card-img-left d-none d-md-flex\">\r\n                            </div>\r\n                            <div className=\"card-body\">\r\n                                <div>\r\n                                    <p className=\"grey-text text-darken-1\">\r\n                                        Don't have an account yet?\r\n                                        <a href=\"#\" onClick={() => this.setState({modalShow: true})}> <u>Register</u> </a>Now!\r\n                                        <RegisterPopup\r\n                                            show={this.state.modalShow}\r\n                                            onHide={() => this.setState({modalShow: false})}\r\n                                        />\r\n                                    </p>\r\n                                </div>\r\n                                <h5 className=\"card-title text-center\">Login</h5>\r\n                                <form className=\"form-signin\" onSubmit={this.onSubmit}>\r\n                                    <span className=\"text-danger\">\r\n                                            {error.error}</span>\r\n                                    <div className=\"form-label-group\">\r\n                                        <input\r\n                                            onChange={this.onChange}\r\n                                            value={this.state.email}\r\n                                            id=\"email\"\r\n                                            type=\"email\"\r\n                                            className={classnames(\"form-control\", {\r\n                                                invalid: error.email || error.emailnotfound\r\n                                            })}\r\n                                        />\r\n                                        <label htmlFor=\"email\">Email</label>\r\n                                    </div>\r\n\r\n                                    <div className=\"form-label-group\">\r\n                                        <input\r\n                                            onChange={this.onChange}\r\n                                            value={this.state.password}\r\n                                            id=\"password\"\r\n                                            type=\"password\"\r\n                                            className={classnames(\"form-control\", {\r\n                                                invalid: error.password || error.passwordincorrect\r\n                                            })}\r\n                                        />\r\n                                        <label htmlFor=\"password\">Password</label>\r\n                                    </div>\r\n           <div class=\"form-check\">\r\n    <input type=\"checkbox\" class=\"form-check-input\" id=\"exampleCheck1\" checked={this.state.isStylist} onChange={this.onCheck}/>\r\n    <label class=\"form-check-label\" htmlFor=\"exampleCheck1\">If you are a stylist or barber, please click here </label>\r\n  </div>\r\n                                    <hr/>\r\n                                        <button\r\n                                    type=\"button\"\r\n                                    className=\"btn btn-lg btn-primary btn-block text-uppercase\"\r\n                                    onClick={this.onSubmit}\r\n                                >\r\n                                    Login\r\n                                </button>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nLogin.propTypes = {\r\n    login: PropTypes.func.isRequired,\r\n    auth: PropTypes.object.isRequired\r\n};\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth,\r\n    error: state.error\r\n});\r\nexport default connect(\r\n    mapStateToProps,\r\n    {login}\r\n)(Login);","import React, { Component } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { registerUser } from \"../../actions/authActions\";\r\nimport classnames from \"classnames\";\r\nimport \"./register.css\"\r\n\r\nclass RegisterUser extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            firstName: \"\",\r\n            lastName: \"\",\r\n            name: \"\",\r\n            email: \"\",\r\n            password: \"\",\r\n            password2: \"\",\r\n            error: {}\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        // If logged in and user navigates to RegisterUser page, should redirect them to dashboard\r\n    }\r\n    componentWillReceiveProps(nextProps) {\r\n        if (nextProps.error) {\r\n            this.setState({\r\n                error: nextProps.error\r\n            });\r\n        }\r\n    }\r\n    onChange = e => {\r\n        this.setState({ [e.target.id]: e.target.value });\r\n    };\r\n    onSubmit = e => {\r\n        e.preventDefault();\r\n        const newUser = {\r\n            firstName: this.state.firstName,\r\n            lastName: this.state.lastName,\r\n            name: this.state.name,\r\n            email: this.state.email,\r\n            password: this.state.password,\r\n            password2: this.state.password2\r\n        };\r\n        this.props.registerUser(newUser, this.props.history);\r\n    };\r\n    render() {\r\n        const { error } = this.state;\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-5 col-5 mx-auto\">\r\n                        <div className=\"card card-signin flex-row my-5\">\r\n                            <div className=\"card-body\">\r\n                                <h5 className=\"card-title text-center\">Register</h5>\r\n                                <form className=\"form-signin\" onSubmit={this.onSubmit}>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"form-label-group col-6\">\r\n                                            <input type=\"text\" onChange={this.onChange} error={error.firstName}\r\n                                                   value={this.state.firstName} id=\"firstName\" className={classnames(\"form-control\", {\r\n                                                invalid: error.firstName\r\n                                            })} placeholder=\"First Name\" required autoFocus />\r\n                                            <label htmlFor=\"firstName\">First Name</label>\r\n                                            <span className=\"red-text\">{error.firstName}</span>\r\n                                        </div>\r\n                                        <div className=\"form-label-group col-6\">\r\n                                            <input type=\"text\" onChange={this.onChange} error={error.lastName}\r\n                                                   value={this.state.lastName} id=\"lastName\" className={classnames(\"form-control\", {\r\n                                                invalid: error.lastName\r\n                                            })} placeholder=\"Last Name\" required autoFocus />\r\n                                            <label htmlFor=\"lastName\">Last Name</label>\r\n                                            <span className=\"red-text\">{error.lastName}</span>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"form-label-group\">\r\n                                        <input type=\"text\" onChange={this.onChange} error={error.name}\r\n                                               value={this.state.name} id=\"name\" className={classnames(\"form-control\", {\r\n                                            invalid: error.name\r\n                                        })} placeholder=\"Username\" required autoFocus />\r\n                                            <label htmlFor=\"name\">Username</label>\r\n                                            <span className=\"red-text\">{error.name}</span>\r\n                                    </div>\r\n\r\n                                    <div className=\"form-label-group\">\r\n                                        <input type=\"email\" onChange={this.onChange}\r\n                                               value={this.state.email}\r\n                                               error={error.email} id=\"email\"\r\n                                               placeholder=\"Email address\" className={classnames(\"form-control\", {\r\n                                            invalid: error.email\r\n                                        })} required />\r\n                                            <label htmlFor=\"email\">Email address</label>\r\n                                            <span className=\"red-text\">{error.email}</span>\r\n                                    </div>\r\n\r\n                                    <hr/>\r\n\r\n                                        <div className=\"form-label-group\">\r\n                                            <input type=\"password\" onChange={this.onChange}\r\n                                                   value={this.state.password}\r\n                                                   error={error.password} id=\"password\"\r\n                                                   placeholder=\"Password\" className={classnames(\"form-control\", {\r\n                                                invalid: error.password\r\n                                            })} required />\r\n                                                <label htmlFor=\"password\">Password</label>\r\n                                                <span className=\"red-text\">{error.password}</span>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-label-group\">\r\n                                            <input type=\"password\" onChange={this.onChange}\r\n                                                   value={this.state.password2}\r\n                                                   error={error.password2} id=\"password2\" placeholder=\"Password\"\r\n                                                   className={classnames(\"form-control\", {\r\n                                                       invalid: error.password2\r\n                                                   })} required />\r\n                                                <label htmlFor=\"password2\">Confirm password</label>\r\n                                                <span className=\"red-text\">{error.password2}</span>\r\n                                        </div>\r\n\r\n                                        <button className=\"btn btn-lg btn-primary btn-block text-uppercase\"\r\n                                                type=\"submit\">Register\r\n                                        </button>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nRegisterUser.propTypes = {\r\n    registerUser: PropTypes.func.isRequired,\r\n    auth: PropTypes.object.isRequired,\r\n    error: PropTypes.object.isRequired\r\n};\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth,\r\n    error: state.error\r\n});\r\nexport default connect(\r\n    mapStateToProps,\r\n    { registerUser }\r\n)(withRouter(RegisterUser));","import React, { Component } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { registerStylist } from \"../../actions/authActions\";\r\nimport classnames from \"classnames\";\r\nimport \"./register.css\"\r\n\r\nclass RegisterStylist extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            firstName: \"\",\r\n            lastName: \"\",\r\n            texasID: \"\",\r\n            email: \"\",\r\n            password: \"\",\r\n            password2: \"\",\r\n            error: \"\",\r\n            businessName: \"\",\r\n            photo: \"\",\r\n            address: \"\",\r\n        };\r\n    }\r\n    \r\n    componentDidMount() {\r\n        // If logged in and user navigates to Register page, should redirect them to dashboard\r\n    }\r\n    componentWillReceiveProps(nextProps) {\r\n        if (nextProps.error) {\r\n            this.setState({\r\n                error: nextProps.error\r\n            });\r\n        }\r\n    }\r\n    onChange = e => {\r\n        this.setState({ [e.target.id]: e.target.value });\r\n    };\r\n    onSubmit = e => {\r\n        e.preventDefault();\r\n        const newUserStylist = {\r\n            firstName: this.state.firstName,\r\n            lastName: this.state.lastName,\r\n            email: this.state.email,\r\n            password: this.state.password,\r\n            password2: this.state.password2,\r\n            texasID: this.state.texasID,\r\n            businessName: this.state.businessName,\r\n            photo: this.state.photo,\r\n            address: this.state.address,\r\n        };\r\n        this.props.registerStylist(newUserStylist, this.props.history);\r\n    };\r\n    render() {\r\n        const { error } = this.state;\r\n        return (\r\n            <div className=\"container mt-5\">\r\n                <div className=\"row\">\r\n                    <div className=\"col s8 offset-s2\">\r\n                        <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\r\n                            <h4>\r\n                                <b>Register</b> a stylist account below\r\n                            </h4>\r\n                        </div>\r\n                        <form noValidate onSubmit={this.onSubmit}>\r\n                            <div className=\"input-field col s12\">\r\n                                <input\r\n                                    onChange={this.onChange}\r\n                                    value={this.state.firstName}\r\n                                    error={error.firstName}\r\n                                    id=\"firstName\"\r\n                                    type=\"text\"\r\n                                    placeholder=\"First Name\"\r\n                                    className={classnames(\"\", {\r\n                                        invalid: error.firstName\r\n                                    })}\r\n                                />\r\n                                <label htmlFor=\"firstName\">First Name</label>\r\n                                <span className=\"red-text\">{error.firstName}</span>\r\n                            </div>\r\n                            <div className=\"input-field col s12\">\r\n                                <input\r\n                                    onChange={this.onChange}\r\n                                    value={this.state.lastName}\r\n                                    error={error.lastName}\r\n                                    id=\"lastName\"\r\n                                    type=\"text\"\r\n                                    placeholder=\"Last Name\"\r\n                                    className={classnames(\"\", {\r\n                                        invalid: error.lastName\r\n                                    })}\r\n                                />\r\n                                <label htmlFor=\"lastName\">Last Name</label>\r\n                                <span className=\"red-text\">{error.lastName}</span>\r\n                            </div>\r\n                            <div className=\"input-field col s12\">\r\n                                <input\r\n                                    onChange={this.onChange}\r\n                                    value={this.state.email}\r\n                                    error={error.email}\r\n                                    id=\"email\"\r\n                                    type=\"email\"\r\n                                    placeholder=\"something something @email.com\"\r\n                                    className={classnames(\"\", {\r\n                                        invalid: error.email\r\n                                    })}\r\n                                />\r\n                                <label htmlFor=\"email\">Email</label>\r\n                                <span className=\"red-text\">{error.email}</span>\r\n                            </div>\r\n                            <div className=\"input-field col s12\">\r\n                                <input\r\n                                    onChange={this.onChange}\r\n                                    value={this.state.password}\r\n                                    error={error.password}\r\n                                    id=\"password\"\r\n                                    type=\"password\"\r\n                                    className={classnames(\"\", {\r\n                                        invalid: error.password\r\n                                    })}\r\n                                />\r\n                                <label htmlFor=\"password\">Password</label>\r\n                                <span className=\"red-text\">{error.password}</span>\r\n                            </div>\r\n                            <div className=\"input-field col s12\">\r\n                                <input\r\n                                    onChange={this.onChange}\r\n                                    value={this.state.password2}\r\n                                    error={error.password2}\r\n                                    id=\"password2\"\r\n                                    type=\"password\"\r\n                                    className={classnames(\"\", {\r\n                                        invalid: error.password2\r\n                                    })}\r\n                                />\r\n                                <label htmlFor=\"password2\">Confirm Password</label>\r\n                                <span className=\"red-text\">{error.password2}</span>\r\n                            </div>\r\n                            <div className=\"input-field col s12\">\r\n                                <input\r\n                                    onChange={this.onChange}\r\n                                    value={this.state.texasID}\r\n                                    error={error.texasID}\r\n                                    id=\"texasID\"\r\n                                    type=\"text\"\r\n                                    placeholder=\"Enter any texas barber's licence or cosmetology license, we'll check to make sure its valid soon\"\r\n                                    className={classnames(\"\", {\r\n                                        invalid: error.texasID\r\n                                    })}\r\n                                />\r\n                                <label htmlFor=\"texasID\">Texas Cosmetology License ID Number</label>\r\n                                <span className=\"red-text\">{error.texasID}</span>\r\n                            </div>\r\n                            <div className=\"input-field col s12\">\r\n                                <input\r\n                                    onChange={this.onChange}\r\n                                    value={this.state.businessName}\r\n                                    error={error.businessName}\r\n                                    id=\"businessName\"\r\n                                    type=\"text\"\r\n                                    placeholder=\"Enter the business name on your license\"\r\n                                    className={classnames(\"\", {\r\n                                        invalid: error.businessName\r\n                                    })}\r\n                                />\r\n                                <label htmlFor=\"businessName\">Business Name</label>\r\n                                <span className=\"red-text\">{error.businessName}</span>\r\n                            </div>\r\n                            <div className=\"input-field col s12\">\r\n                                <input\r\n                                    onChange={this.onChange}\r\n                                    value={this.state.photo}\r\n                                    error={error.photo}\r\n                                    id=\"photo\"\r\n                                    type=\"text\"\r\n                                    placeholder=\"Enter the url of your photo :/\"\r\n                                    className={classnames(\"\", {\r\n                                        invalid: error.photo\r\n                                    })}\r\n                                />\r\n                                <label htmlFor=\"photo\">Photo</label>\r\n                                <span className=\"red-text\">{error.photo}</span>\r\n                            </div>\r\n                            <div className=\"input-field col s12\">\r\n                                <input\r\n                                    onChange={this.onChange}\r\n                                    value={this.state.address}\r\n                                    error={error.address}\r\n                                    id=\"address\"\r\n                                    type=\"text\"\r\n                                    placeholder=\"Enter your address or business address\"\r\n                                    className={classnames(\"\", {\r\n                                        invalid: error.address\r\n                                    })}\r\n                                />\r\n                                <label htmlFor=\"address\">Adress</label>\r\n                                <span className=\"red-text\">{error.address}</span>\r\n                            </div>\r\n                            <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\r\n                                <button\r\n                                    style={{\r\n                                        width: \"150px\",\r\n                                        borderRadius: \"3px\",\r\n                                        letterSpacing: \"1.5px\",\r\n                                        marginTop: \"1rem\"\r\n                                    }}\r\n                                    type=\"button\"\r\n                                    className=\"btn btn-large waves-effect waves-light hoverable blue accent-3\"\r\n                                    onClick={this.onSubmit}\r\n                                >\r\n                                    Sign up\r\n                                </button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nRegisterStylist.propTypes = {\r\n    registerStylist: PropTypes.func.isRequired,\r\n    auth: PropTypes.string.isRequired,\r\n    error: PropTypes.string.isRequired,\r\n};\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth,\r\n    error: state.error\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    { registerStylist }\r\n)(withRouter(RegisterStylist));","import { GET_ERRORS } from \"../actions/types\";\r\nconst initialState = {};\r\nexport default function(state = initialState, action) {\r\n    switch (action.type) {\r\n        case GET_ERRORS:\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n}","import {\r\n    SET_CURRENT_USER,\r\n    USER_LOADING\r\n} from \"../actions/types\";\r\nconst isEmpty = require(\"is-empty\");\r\nconst initialState = {\r\n    isAuthenticated: false,\r\n    user: {},\r\n    loading: false\r\n};\r\nexport default function(state = initialState, action) {\r\n    switch (action.type) {\r\n        case SET_CURRENT_USER:\r\n            return {\r\n                ...state,\r\n                isAuthenticated: !isEmpty(action.payload),\r\n                user: action.payload\r\n            };\r\n        case USER_LOADING:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from 'redux';\r\nimport errorReducer from './errorReducer';\r\nimport authReducer from './authReducer';\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    auth: authReducer,\r\n    error: errorReducer\r\n})\r\n\r\nexport default (state, action) =>\r\n    rootReducer(action.type === 'LOGOUT' ? undefined : state, action)","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\nconst initialState = {};\r\nconst middleware = [thunk];\r\nconst store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    compose(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst ServiceBox = ({imageURL, service}) => {\r\n    const searchURL = '/stylists/search/services'\r\n    return (\r\n\r\n        <div className=\"card m-3\">\r\n            <Link to={`${searchURL}/${service}`}>\r\n                <img className=\"card-img-top\" src={imageURL} alt=\"Card image cap\"/>\r\n                <div className=\"card-body\">\r\n                    <p className=\"card-text text-center border-dark\">{service}</p>\r\n                </div>\r\n            </Link>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ServiceBox;\r\n","import React from 'react';\r\nimport ReactLoading from 'react-loading'\r\n\r\nconst Loading = () => {\r\n    return (\r\n        <div className=\"h-100 row justify-content-center align-items-center\">\r\n            <ReactLoading type=\"cubes\" color=\"#000\" height=\"4rem\" width=\"4rem\" />\r\n        </div>\r\n\r\n\r\n    );\r\n};\r\n\r\nexport default Loading;\r\n","import React, {useEffect, useState} from \"react\";\r\nimport {useSelector} from \"react-redux\";\r\nimport ServiceBox from \"./serviceBox\";\r\nimport axios from 'axios'\r\nimport Loading from \"../loading\";\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst UserLanding = () => {\r\n    const {user} = useSelector(state => state.auth)\r\n    const URL = 'http://localhost:8000/users/appointments/'\r\n    const userId = user.id\r\n    const [numAppointments, setNumAppointments] = useState(0);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    useEffect(() => {\r\n        const fetchAppointments = async () => {\r\n            await axios.get(URL + userId)\r\n                .then(res => {\r\n                    let returnedAppointments = res.data.appointments\r\n                    let future =[]\r\n                    returnedAppointments.forEach(appointment => {\r\n                        let endDate = new Date(appointment.endDate)\r\n                        const now = new Date().toLocaleString()\r\n                        appointment.endDate = endDate.toLocaleString()\r\n                        if (appointment.endDate > now) {\r\n                            future = [...future, appointment]\r\n                        }\r\n                    })\r\n                    setNumAppointments(future.length)\r\n                    setIsLoading(false)\r\n                })\r\n                .catch(err => console.log(err))\r\n        }\r\n        fetchAppointments()\r\n    }, [])\r\n    const services = ['Men\\'s Haircut', 'Women\\'s Haircut', 'Braids', 'Color', 'Facial', 'Nails']\r\n    const imageURLs = [\r\n        'https://images.unsplash.com/photo-1519019121902-896ed7312a9e?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1950&q=80',\r\n        'https://images.pexels.com/photos/3993443/pexels-photo-3993443.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=750&w=1260',\r\n        'https://images.unsplash.com/photo-1582095133179-bfd08e2fc6b3?ixlib=rb-1.2.1&auto=format&fit=crop&w=1950&q=80',\r\n        'https://images.unsplash.com/photo-1492106087820-71f1a00d2b11?ixlib=rb-1.2.1&auto=format&fit=crop&w=934&q=80',\r\n        'https://images.unsplash.com/photo-1531299244174-d247dd4e5a66?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1270&q=80',\r\n        'https://images.unsplash.com/photo-1599206676335-193c82b13c9e?ixlib=rb-1.2.1&auto=format&fit=crop&w=1251&q=80'\r\n    ]\r\n    return (\r\n        <div className=\"h-100 align-items-center m-0\">\r\n            {isLoading ? <Loading /> :\r\n                <div className=\"justify-content-center align-items-center h-100\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-6 mx-auto  align-self-center text-center\">\r\n                            <h1 className=\"display-1\"><b>Hello</b>, {user.firstName}</h1>\r\n                            <p>You have <Link to=\"/userProfile\">{numAppointments} appointments</Link></p>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row justify-content-center align-items-start h-100\">\r\n                        <div className=\"card-deck col-11\">\r\n                            {services.map((service, index) => <ServiceBox\r\n                                key={index}\r\n                                imageURL={imageURLs[index]}\r\n                                service={service}\r\n                            />)}\r\n                        </div>\r\n\r\n\r\n                    </div>\r\n\r\n                </div>\r\n            }\r\n        </div>\r\n\r\n\r\n    );\r\n};\r\n\r\nexport default UserLanding;\r\n","import React from 'react';\r\nimport './rating.css'\r\n\r\nconst Rating = ({rating}) => {\r\n    return (\r\n        <span className=\"stars\">\r\n                {\r\n                    [1,2,3,4,5].map(x => (\r\n                        <i key={x} className={(x > rating ? 'empty-star' : 'full-star')}/>\r\n                    ))\r\n                }\r\n        </span>\r\n    );\r\n};\r\n\r\nexport default Rating;\r\n","import React from 'react';\r\nimport Rating from \"../rating/rating\";\r\nimport {CustomPlaceholder} from \"react-placeholder-image\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\n// Information span for each stylist\r\nconst StylistInfo = ({stylist}) => {\r\n\r\n    return (\r\n        <div className=\"container-fluid my-2\">\r\n            <Link to={`/stylist/stylistId=${stylist._id}`} style={{textDecoration: 'none'}}>\r\n                <hr/>\r\n                <div className=\"row\">\r\n                    <div className=\"col-4\">\r\n                        {\r\n                            stylist.photo === 'no-photo.jpg' ?\r\n                                <CustomPlaceholder\r\n                                    width=\"200\"\r\n                                    height=\"200\"\r\n                                    backgroundColor=\"#123456\"\r\n                                    textColor=\"#ffffff\"\r\n                                    text={`Stylist ${stylist.firstName}`}\r\n                                /> :\r\n                                <img src={stylist.photo} className=\"stylistImage\" alt=\"Stylist\"/>\r\n                        }\r\n\r\n                    </div>\r\n                    <div className=\"col-8\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-8\">\r\n                                <h4>{stylist.firstName} {stylist.lastName}</h4>\r\n                                <p className=\"text-muted\">{stylist.businessName}</p>\r\n                            </div>\r\n                            <div className=\"col-4\">\r\n                                <Rating rating={stylist.average}/>\r\n                                <p className=\"text-muted d-inline ml-1\">({stylist.reviews.length})</p>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <button className=\"btn btn-warning align-self-end\">Book an appointment</button>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                </div>\r\n                <hr/>\r\n            </Link>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default StylistInfo;\r\n","import React from 'react';\r\nimport Rating from \"./rating\";\r\n\r\nconst RatingFilter = ({queries}) => {\r\n    const ratings = [5,4,3,2,1]\r\n    const searchURL = \"/stylists/search\"\r\n\r\n    return (\r\n        <div>\r\n            <ul style={{listStyleType: \"none\"}}>\r\n                {ratings.map((rating, index) => (\r\n                    <li key={index}>\r\n                        {\r\n                            (<a href={`${searchURL}/name=${queries['name']}&service=${queries['service']}&min=${rating}`}>\r\n                                <Rating rating={rating} /> & Up\r\n                            </a>)\r\n                        }\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default RatingFilter;\r\n","import React from 'react';\r\nimport RatingFilter from \"../rating/ratingFilter\";\r\n\r\nconst SearchFilter = ({queries}) => {\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            <div>\r\n                <h6 className=\"text-center\">Avg. Customer Review</h6>\r\n                <RatingFilter queries={queries}/>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SearchFilter;\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport ReactGoogleMapLoader from 'react-google-maps-loader';\r\nimport GoogleMapReact from 'google-map-react';\r\nimport { Icon } from '@iconify/react';\r\nimport locationIcon from '@iconify/icons-mdi/map-marker';\r\nimport './map.css';\r\nimport { BrowserRouter as Router, Link } from 'react-router-dom';\r\n\r\nconst YOUR_API_KEY = 'AIzaSyCHjOs8sCJfI1C0HnzD5C1BahEx_XRQJvw';\r\n\r\nconst useIsMount = () => {\r\n    const isMountRef = useRef(true);\r\n    useEffect(() => {\r\n        isMountRef.current = false;\r\n    }, []);\r\n    return isMountRef.current;\r\n};\r\n\r\nexport const LocationPin = ({\r\n    stylist,\r\n    lng,\r\n    lat,\r\n    onClickLocation,\r\n    clicked,\r\n}) => (\r\n    <div onClick={e => onClickLocation({ lat, lng })} className='pin'>\r\n        <Icon icon={locationIcon} className='pin-icon' />\r\n        <div className={`pin-text ${clicked ? 'bg-white p-3' : null}`}>\r\n            <p className='h6'>{stylist.firstName + ' ' + stylist.lastName}</p>\r\n            {clicked && <hr />}\r\n            <p className='h6'>{stylist.businessName}</p>\r\n            {clicked && <small>{stylist.number}</small>}\r\n            {clicked && <small>{stylist.email}</small>}\r\n            {clicked && <hr />}\r\n            {clicked ? (\r\n                <>\r\n                    <p className='h6'>Services</p>\r\n                    <hr />\r\n                    <ul>\r\n                        {stylist.services.map((service, i) => {\r\n                            return <li key={i}>{service}</li>;\r\n                        })}\r\n                    </ul>\r\n                    <hr />\r\n                    <Link\r\n                        to={`/stylist/stylistId=${stylist._id.toString()}`}\r\n                        className='btn btn-block btn-primary'\r\n                    >\r\n                        More info\r\n                    </Link>\r\n                </>\r\n            ) : null}\r\n        </div>\r\n    </div>\r\n);\r\n\r\nexport const Map = ({ location, stylists }) => {\r\n    const [center, setCenter] = useState([]);\r\n    const [zoom, setZoom] = useState(10);\r\n    const [target, setTarget] = useState({});\r\n\r\n    const handleClick = (location, stylist) => {\r\n        console.log(location);\r\n        setCenter([location.lat, location.lng]);\r\n        setTarget(stylist);\r\n    };\r\n\r\n    const isMount = useIsMount();\r\n\r\n    return (\r\n        <div className='map'>\r\n            <div className='google-map'>\r\n                <GoogleMapReact\r\n                    bootstrapURLKeys={{ key: YOUR_API_KEY }}\r\n                    center={center.length > 0 ? center : location}\r\n                    defaultZoom={5}\r\n                    zoom={zoom}\r\n                    onDrag={e => setTarget({})}\r\n                >\r\n                    {stylists.map((stylist, i) => {\r\n                        return (\r\n                            stylist.location && (\r\n                                <LocationPin\r\n                                    key={i}\r\n                                    lat={stylist.location.coordinates[1]}\r\n                                    lng={stylist.location.coordinates[0]}\r\n                                    stylist={stylist}\r\n                                    clicked={\r\n                                        target && target._id == stylist._id\r\n                                    }\r\n                                    onClickLocation={location =>\r\n                                        handleClick(location, stylist)\r\n                                    }\r\n                                />\r\n                            )\r\n                        );\r\n                    })}\r\n                </GoogleMapReact>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport StylistInfo from './stylistInfo';\r\nimport Loading from '../loading';\r\nimport SearchFilter from './searchFilter';\r\nimport { Map } from './map';\r\n\r\nconst StylistsList = () => {\r\n    const URL = 'http://localhost:8000/stylists/search';\r\n    const [stylists, setStylists] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n\r\n    const queries = useParams();\r\n\r\n    useEffect(() => {\r\n        const getStylists = async () => {\r\n            await axios\r\n                .get(URL, {\r\n                    params: queries,\r\n                })\r\n                .then(res => {\r\n                    setStylists(res.data.returnedStylists);\r\n                    setIsLoading(false);\r\n                    console.log('Stylists data fetched');\r\n                })\r\n                .catch(err => console.log(err));\r\n        };\r\n        getStylists();\r\n    }, []);\r\n\r\n    return (\r\n        <div className='h-100 align-items-center m-0'>\r\n            {isLoading ? (\r\n                <Loading />\r\n            ) : stylists.length === 0 ? (\r\n                <h1 className='text-center align-self-center'>\r\n                    No Stylists Available\r\n                </h1>\r\n            ) : (\r\n                <div className='row'>\r\n                    <div className='col-2 overflow-hidden'>\r\n                        <SearchFilter\r\n                            queries={queries}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className='p-0 border-left col-7 overflow-auto'>\r\n                        <ul className='p-0 m-0'>\r\n                            {stylists.map((stylist, index) => (\r\n                                <StylistInfo key={index} stylist={stylist} />\r\n                            ))}\r\n                        </ul>\r\n                    </div>\r\n\r\n                    <div className='col-3 p-2 overflow-hidden'>\r\n                        {console.log(stylists)}\r\n                        {stylists.length > 0 && (\r\n                            <Map\r\n                                // Object.keys(stylist.location).length !== 0\r\n                                stylists={stylists.filter(stylist => {\r\n                                    return stylist.hasOwnProperty('location')\r\n                                })}\r\n                                location={{\r\n                                    lat: 32.779167,\r\n                                    lng: -96.808891\r\n                                }}\r\n                            />\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default StylistsList;\r\n","import React, {useState} from 'react';\r\nimport {\r\n    useParams\r\n} from \"react-router-dom\";\r\nimport axios from 'axios';\r\nimport {useStore} from 'react-redux'\r\n\r\nconst ChangePassword = () => {\r\n    const store = useStore()\r\n    const userType = store.getState().auth\r\n    let {id} = useParams();\r\n    const [newPassword, setNewPassword] = useState('');\r\n    const URL = 'http://localhost:8000/users/resetPassword/'\r\n    const onSend = async event => {\r\n        event.preventDefault()\r\n        await axios.put(URL+{id}.id, {\r\n            password: newPassword\r\n        })\r\n            .then(res => console.log(res))\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"container mt-5\">\r\n                <div className=\"row align-items-center h-100\">\r\n                    <div className=\"col-6 mx-auto\">\r\n                        <form onSubmit={onSend}>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"email\">Enter your new password</label>\r\n                                <input type=\"password\" id=\"password\" value={newPassword} onChange={event => setNewPassword(event.target.value)} className=\"form-control\"/>\r\n                            </div>\r\n                            <button type=\"submit\" className=\"btn btn-primary\">Reset</button>\r\n                        </form>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ChangePassword;\r\n","import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport Rating from '../rating/rating';\r\n\r\nconst ReviewBox = props => {\r\n    return (\r\n        <div className='ReviewBox p-1'>\r\n            <div className='ReviewBox-Average text-center m-2 card'>\r\n                <h3 className='display-4'>{props.stylist}'s Average Rating:</h3>\r\n                <h3>\r\n                    <Rating rating={props.average} />\r\n                </h3>\r\n            </div>\r\n            <div className='ReviewBox-Reviews'>\r\n                <header className='display-3 text-center'>Reviews</header>\r\n                {props.reviews.map((review, index) => (\r\n                    <div className='Review-Card card my-2 p-2' key={index}>\r\n                        <h6 className='display-4 m-1' key={review._id}>\r\n                            {review.reviewerName}{' '}\r\n                        </h6>\r\n                        <h1>\r\n                            <Rating rating={review.score} />\r\n                        </h1>\r\n                        <p>{review.notes}</p>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ReviewBox;\r\n","import React from 'react';\r\nimport {Modal} from \"react-bootstrap\";\r\nimport axios from 'axios'\r\nimport {useHistory} from \"react-router\";\r\nimport {useSelector} from \"react-redux\";\r\n\r\nconst BookingPopup = ({show, onHide, appointmentId}) => {\r\n\r\n    const history = useHistory()\r\n    const bookURL = 'http://localhost:8000/users/appointments/book/'\r\n    const store = useSelector(state => state.auth)\r\n    const userId = store.user.id\r\n\r\n    const onBookAppointment = async () => {\r\n        await axios.put(bookURL+appointmentId, {userId: userId})\r\n            .then(res => {\r\n                console.log(res)\r\n                alert('Appointment booked successfully!')\r\n                history.push('/userLanding')\r\n            })\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Modal\r\n                show={show}\r\n                onHide={onHide}\r\n                centered\r\n            >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>\r\n                        Finalize Booking\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body className=\"mx-auto\">\r\n                    <button className=\"warning\" onClick={onBookAppointment}>Book Appointment!</button>\r\n                </Modal.Body>\r\n            </Modal>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default BookingPopup;\r\n","import React, {useEffect, useState} from 'react';\r\nimport {Modal} from \"react-bootstrap\";\r\nimport axios from 'axios'\r\nimport BookingPopup from \"./bookingPopup\";\r\n\r\nconst ServicePopup = ({show, onHide, appointments}) => {\r\n    const [nextModalShow, setNextModalShow] = useState(false);\r\n\r\n    return (\r\n        <div>\r\n            <Modal\r\n                show={show}\r\n                onHide={onHide}\r\n                centered\r\n            >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>\r\n                        Available Times\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body className=\"mx-auto\">\r\n                    <ul className=\"list-group\">\r\n                        {appointments.map((appointment, index) =>\r\n                            <li key={index} className=\"list-group-item\">\r\n                                <BookingPopup\r\n                                    show={nextModalShow}\r\n                                    onHide={() => setNextModalShow(false)}\r\n                                    appointmentId={appointment._id}\r\n                                />\r\n                                <button onClick={() => setNextModalShow(true)}>\r\n                                    {\r\n                                        appointment.startDate\r\n                                    }\r\n                                </button>\r\n\r\n                            </li>\r\n                        )}\r\n                    </ul>\r\n\r\n                </Modal.Body>\r\n            </Modal>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ServicePopup;\r\n","import React, {useEffect, useState} from 'react';\r\nimport ServicePopup from \"./servicePopup\";\r\nimport axios from \"axios\";\r\n\r\nconst Services = ({ services, stylistId }) => {\r\n    const [modalShow, setModalShow] = useState(false);\r\n    const [appointments, setAppointments] = useState([]);\r\n\r\n    const URL = 'http://localhost:8000/stylists/appointments/'\r\n    useEffect(() => {\r\n        const getAppointments = async () => {\r\n            await axios.get(URL+stylistId)\r\n                .then(res => {\r\n                    let returnedAppointments = res.data.appointments\r\n                    returnedAppointments.forEach(appointment => {\r\n                        let startDate = new Date(appointment.startDate)\r\n                        appointment.startDate = startDate.toLocaleString()\r\n                    })\r\n                    const availableAppointments = returnedAppointments.filter(appointment => appointment.user === null)\r\n                    setAppointments(availableAppointments)\r\n                })\r\n                .catch(err => console.log(err))\r\n        }\r\n        getAppointments()\r\n    }, [])\r\n\r\n    return (\r\n        <div className='Services text-center'>\r\n            <h5 className='card-title display-4'> Services </h5>\r\n            <div className='card'>\r\n                {services.map((service, i) => (\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-6 offset-md-3\">\r\n                                <div className='m-3 p-2 border border-dark' key={i}>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-6\">\r\n                                            <h3>{service.name}</h3>\r\n                                            <p className=\"text-muted\">{service.description}</p>\r\n                                            <p className=\"text-muted\">${service.price[0]}</p>\r\n                                        </div>\r\n\r\n                                        <ServicePopup\r\n                                            show={modalShow}\r\n                                            onHide={() => setModalShow(false)}\r\n                                            appointments={appointments}\r\n                                        />\r\n                                        <div className=\"col-6 align-self-center\">\r\n                                            <button onClick={() => {\r\n                                                appointments.length > 0 ? setModalShow(true) :\r\n                                                    alert('No available appointments!')\r\n                                            }} className=\"btn btn-info\">\r\n                                                See available times\r\n                                            </button>\r\n                                        </div>\r\n                                    </div>\r\n\r\n\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Services;\r\n","import React, {useEffect, useState} from 'react';\r\nimport {useParams} from 'react-router-dom'\r\nimport axios from 'axios'\r\nimport Loading from \"../loading\"\r\nimport {Tab, Tabs, TabList, TabPanel} from 'react-tabs'\r\nimport 'react-tabs/style/react-tabs.css'\r\nimport {CustomPlaceholder} from \"react-placeholder-image\";\r\nimport ReviewBox from \"./reviewBox\";\r\nimport Services from \"./services\";\r\n\r\nconst StylistProfile = () => {\r\n    const [stylist, setStylist] = useState({});\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const stylistId = useParams()\r\n    const URL = \"http://localhost:8000/stylists/\"\r\n\r\n    useEffect(() => {\r\n        const fetchStylist = async () => {\r\n            await axios.get(URL+stylistId.id)\r\n                .then(res => {\r\n                    const stylistData = res.data.stylist\r\n                    console.log(stylistData)\r\n                    setStylist(stylistData)\r\n                    setIsLoading(false)\r\n                })\r\n        }\r\n        fetchStylist()\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <div className=\"h-100\">\r\n            {\r\n                isLoading ? <Loading/> :\r\n                    <div className=\"container\">\r\n                        <div className=\"card card-signin flex-row my-5\">\r\n                            <div className=\"card-body\">\r\n                                <div className=\"row mb-4\">\r\n                                    <div className=\"col-3 mt-4\">\r\n                                        {\r\n                                            stylist.photo === 'no-photo.jpg' ?\r\n                                                <CustomPlaceholder\r\n                                                    width=\"200\"\r\n                                                    height=\"200\"\r\n                                                    backgroundColor=\"#123456\"\r\n                                                    textColor=\"#ffffff\"\r\n                                                    text={`Stylist ${stylist.firstName}`}\r\n                                                /> :\r\n                                                <img src={stylist.photo} className=\"w-100 h-100\" alt=\"Stylist\"/>\r\n                                        }\r\n                                    </div>\r\n                                    <div className=\"col-9\">\r\n                                        <h2 className=\"text-center display-4 mb-4\">{`${stylist.firstName} ${stylist.lastName}`}</h2>\r\n                                        <h5>Contact Information</h5>\r\n                                        <ul className=\"list-group list-group-flush\">\r\n                                            <li className=\"list-group-item\">Phone Number: {stylist.number === '' ? 'None' : stylist.number}</li>\r\n                                            <li className=\"list-group-item\">Email: {stylist.email === '' ? 'None' : stylist.email}</li>\r\n                                            <li className=\"list-group-item\">Address: {stylist.address === '' ? 'None' : stylist.address}</li>\r\n                                        </ul>\r\n                                    </div>\r\n\r\n                                </div>\r\n\r\n                                <Tabs>\r\n                                    <TabList>\r\n                                        <Tab>Services</Tab>\r\n                                        <Tab>Reviews</Tab>\r\n                                    </TabList>\r\n\r\n                                    <TabPanel>\r\n                                        <Services\r\n                                            stylistId={stylistId.id}\r\n                                            services={stylist.services}\r\n                                        />\r\n                                    </TabPanel>\r\n                                    <TabPanel>\r\n                                        <ReviewBox\r\n                                            stylist={stylist.firstName}\r\n                                            average={stylist.average}\r\n                                            reviews={stylist.reviews}\r\n                                        />\r\n                                    </TabPanel>\r\n                                </Tabs>\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n            }\r\n        </div>\r\n\r\n\r\n    );\r\n};\r\n\r\nexport default StylistProfile;\r\n","import React, {useEffect, useState} from 'react';\r\nimport {Link, useHistory} from \"react-router-dom\";\r\nimport {useSelector} from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport Loading from \"../loading\";\r\n\r\nconst EditProfile = () => {\r\n    const [firstName, setFirstName] = useState('');\r\n    const [lastName, setLastName] = useState('');\r\n    const [address, setAddress] = useState('');\r\n    const [number, setNumber] = useState('');\r\n    const [isLoading, setIsLoading] = useState(true);\r\n\r\n    let history = useHistory()\r\n\r\n    const {user} = useSelector(state => state.auth)\r\n\r\n    const userId = {user}.user.id\r\n    const token = localStorage.jwtToken\r\n    const config = {headers: {\r\n            Authorization: 'Bearer '+token\r\n        }}\r\n    useEffect(() => {\r\n        const fetchUser = async () => {\r\n            await axios.get(\"http://localhost:8000/users/me\", config)\r\n                .then(res => {\r\n                    const userData = res.data.user\r\n                    setIsLoading(false)\r\n                    setFirstName(userData.firstName)\r\n                    setLastName(userData.lastName)\r\n                    setAddress(userData.address)\r\n                    setNumber(userData.number)\r\n                })\r\n                .catch(err => console.log(err))\r\n        }\r\n        fetchUser()\r\n    }, [])\r\n\r\n\r\n    // Save the profile\r\n    const onSubmit = async event => {\r\n        event.preventDefault()\r\n        await axios.put(`http://localhost:8000/users/${userId}`, {\r\n            firstName: firstName,\r\n            lastName: lastName,\r\n            address: address,\r\n            number: number\r\n        }, config)\r\n            .then(res => {\r\n                alert('Profile Updated!')\r\n                history.push('/userProfile')\r\n            })\r\n            .catch(err => console.log(err))\r\n\r\n    }\r\n\r\n    // first name, last name\r\n    // get rid of email\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            {isLoading ? <Loading/> :\r\n                <div className=\"row\">\r\n                    <div className=\"col-lg-10 col-xl-9 mx-auto\">\r\n                        <div className=\"card card-signin flex-row my-5\">\r\n                            <div className=\"card-body\">\r\n                                <h5 className=\"card-title text-center\">Edit Profile</h5>\r\n                                <form className=\"form-signin\" onSubmit={onSubmit}>\r\n\r\n                                    <div className=\"form-label-group\">\r\n                                        <input type=\"firstName\" onChange={event => setFirstName(event.target.value)}\r\n                                               className=\"form-control\"\r\n                                               value={firstName}\r\n                                               id=\"firstName\"\r\n                                               placeholder=\"First Name\"/>\r\n                                        <label htmlFor=\"firstName\">Enter New First Name</label>\r\n                                    </div>\r\n\r\n                                    <div className=\"form-label-group\">\r\n                                        <input type=\"lastName\" onChange={event => setLastName(event.target.value)}\r\n                                               className=\"form-control\"\r\n                                               value={lastName}\r\n                                               id=\"lastName\"\r\n                                               placeholder=\"Last Name\"/>\r\n                                        <label htmlFor=\"lastName\">Enter New Last Name</label>\r\n                                    </div>\r\n\r\n                                    <div className=\"form-label-group\">\r\n                                        <input type=\"text\" onChange={event => setAddress(event.target.value)}\r\n                                               className=\"form-control\"\r\n                                               value={address}\r\n                                               id=\"address\"\r\n                                               placeholder=\"Address\"/>\r\n                                        <label htmlFor=\"address\">Enter New Address</label>\r\n                                    </div>\r\n\r\n                                    <div className=\"form-label-group\">\r\n                                        <input type=\"text\" onChange={event => setNumber(event.target.value)}\r\n                                               className=\"form-control\"\r\n                                               value={number}\r\n                                               id=\"number\"\r\n                                               placeholder=\"Phone Number\"/>\r\n                                        <label htmlFor=\"number\">Enter New Phone Number</label>\r\n                                    </div>\r\n\r\n                                    <hr/>\r\n\r\n                                    <Link className=\"btn btn-secondary mr-2\" to=\"/userLanding\">Cancel</Link>\r\n                                    <button className=\"btn btn-primary mr-2\"\r\n                                            type=\"submit\">Save\r\n                                    </button>\r\n                                    <Link to=\"/resetPassword\" className=\"btn btn-danger\">\r\n                                        Change Password\r\n                                    </Link>\r\n\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default EditProfile;\r\n","import React, {useState} from 'react';\r\nimport axios from 'axios';\r\n\r\nconst SendPassword = () => {\r\n    const url = 'http://localhost:8000/users/forgotPassword'\r\n    const [email, setEmail] = useState('');\r\n\r\n    const onSend = async event => {\r\n        event.preventDefault()\r\n        await axios.post(url, {\r\n            email: email\r\n        })\r\n            .then(res => alert('Reset password link sent successfully!'))\r\n            .catch(err => {\r\n                alert('Failed to send the link. Please try again!')\r\n                console.log(err)\r\n            })\r\n        setEmail('')\r\n    }\r\n\r\n    return (\r\n        <div className=\"container mt-5\">\r\n            <div className=\"row align-items-center h-100\">\r\n                <div className=\"col-6 mx-auto\">\r\n                    <form onSubmit={onSend}>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"email\">Enter your email below</label>\r\n                            <input type=\"email\" id=\"email\" value={email} onChange={event => setEmail(event.target.value)} className=\"form-control\"/>\r\n                        </div>\r\n                        <button type=\"submit\" className=\"btn btn-primary\">Send reset link</button>\r\n                    </form>\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SendPassword;\r\n","import React from 'react';\r\nimport {Navbar, Nav, NavDropdown} from \"react-bootstrap\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\n\r\nconst StylistNav = (props) => {\r\n    const {user} = useSelector(state => state.auth);\r\n    return (\r\n        <div>\r\n            <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\">\r\n                <Navbar.Brand href=\"/home\">{props}</Navbar.Brand>\r\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\"/>\r\n                <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                    <Nav className=\"mr-auto\">\r\n                        <Nav.Link href={`/stylists/appointments/upcoming/stylistId=${user.id}`}>Upcoming Appointments</Nav.Link>\r\n                        <Nav.Link href={`/stylists/appointments/past/stylistId=${user.id}`}>Past Appointments</Nav.Link>\r\n                        <Nav.Link href={`/services/servicesOffered/stylistId=${user.id}`}>Services Offered</Nav.Link>\r\n                        <Nav.Link href={`/stylists/stylistCalendar/stylistId=${user.id}`}>Calendar </Nav.Link>\r\n                        <Nav.Link href=\"/home\">TBD</Nav.Link>\r\n                    </Nav>\r\n                </Navbar.Collapse>\r\n            </Navbar>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default StylistNav;","import React, {useEffect, useState} from 'react';\r\nimport {Link} from 'react-router-dom'\r\nimport {useParams} from 'react-router-dom'\r\nimport axios from 'axios'\r\nimport Loading from \"../loading\"\r\nimport {Tab, Tabs, TabList, TabPanel} from 'react-tabs'\r\nimport 'react-tabs/style/react-tabs.css'\r\nimport {CustomPlaceholder} from \"react-placeholder-image\";\r\nimport ReviewBox from \"../profile/reviewBox\";\r\nimport Rating from \"../rating/rating\"\r\nconst ServicesList = (props) => {\r\n    const [stylist, setStylist] = useState({});\r\n    const stylistId = useParams();\r\n    const URL = \"http://localhost:8000\";\r\n    const services = stylist.services;\r\n    console.log(\"Services: \", services);\r\n    useEffect(() => {\r\n        const fetchStylist = async () => {\r\n            await axios.get(`${URL}/stylists/${stylistId.id}`)\r\n                .then(res => {\r\n                    const stylistData = res.data.stylist\r\n                    console.log(stylistData)\r\n                    setStylist(stylistData)\r\n                })\r\n        }\r\n        fetchStylist()\r\n    }, [stylist])\r\n    if (stylist && services && services.length > 0){\r\n    return (\r\n        <div className='Services text-center'>\r\n        <h5 className='card-title display-4'> Services </h5>\r\n        <div className='card'>\r\n            {services.map((service, i) => (\r\n                <div className='m-3' key={i}>\r\n                    <div className='h3'>Service {i}</div>\r\n                    <p> {service.name}</p>\r\n                    <p> {service.description}</p>\r\n                    <p> {service.cateogry}</p>\r\n                    <p> {service.price}</p>\r\n\r\n                </div>\r\n            ))}\r\n        </div>\r\n    </div>\r\n    );\r\n            } else {\r\n                return (\r\n                    <div>\r\n                        there are no services available currently. Please add one Below!\r\n                    </div>\r\n                )\r\n            }\r\n};\r\n\r\nexport default ServicesList;","import React, {useEffect, useState} from 'react';\r\n\r\nexport const useInput = initialValue => {\r\n    const [value, setValue] = useState(initialValue);\r\n  \r\n    return {\r\n      value,\r\n      setValue,\r\n      reset: () => setValue(\"\"),\r\n      bind: {\r\n        value,\r\n        onChange: event => {\r\n          setValue(event.target.value);\r\n        }\r\n      }\r\n    };\r\n  };","import React, {useEffect, useState} from 'react';\r\nimport {useParams} from 'react-router-dom'\r\nimport axios from 'axios'\r\nimport 'react-tabs/style/react-tabs.css'\r\nimport { useInput } from '../hooks/InputHook';\r\n\r\n// Register User\r\n// import { MenuItem } from '../temporaryObjects/restaurantModel';\r\nexport const AddServices = () => {\r\n  const [stylist, setStylist] = useState({});\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const stylistId = useParams();\r\n  const URL = `http://localhost:8000`;  \r\n  const { value:name, bind:bindName, reset:resetName } = useInput('');\r\n  const { value:description, bind:bindDescription, reset:resetDescription } = useInput('');\r\n  const { value:price, bind: bindPrice, reset: resetPrice } = useInput('');\r\n  const { value:category, bind: bindCateogry, reset: resetCategory} = useInput('');\r\n\r\n    const onSend = () => {\r\n      const service = {\r\n        name: name,\r\n        description: description,\r\n        price: price,\r\n        category: category,\r\n      }\r\n      const callAxios = async () => {  \r\n        await axios\r\n      .post(`/stylists/services/${stylistId.id}/add`, service)\r\n        .then( res => {\r\n          setStylist(res.data.stylist)})\r\n          .catch(err =>\r\n          //   dispatch({\r\n          //     type: GET_ERRORS,\r\n          //     payload: err.response.data\r\n          // })\r\n          console.log(\"Error upon errors\")\r\n      );   \r\n        };\r\n      resetName();\r\n      resetDescription();\r\n      resetPrice();\r\n      resetCategory();\r\n  //   putAppt(newService);\r\n  callAxios();   \r\n\r\n   }\r\n\r\n    useEffect(() => {\r\n      const fetchStylist = async () => {\r\n          console.log(stylist);\r\n          await axios.get(`${URL}/stylists/${stylistId.id}`)\r\n              .then(res => {\r\n                  const stylistData = res.data.stylist\r\n                  console.log(stylistData)\r\n                  setStylist(stylistData)\r\n                  setIsLoading(false)\r\n              })\r\n      }\r\n      fetchStylist()\r\n  }, [stylist])\r\n/*\r\nonChange={event => setNewService(event.target.value)}\r\n*/\r\n\r\n    return(<>\r\n       <form className=\"container bg-green text-success\" style={{width: \"50%\", height: \"50%\"}}>\r\n      <h3 className=\"action\">Add Service Offered</h3>\r\n      <div className=\"form-group\">\r\n          <label htmlFor=\"name\">Service Name</label>\r\n          <input type=\"text\" {...bindName} />\r\n      </div>\r\n      <div className=\"form-group\">\r\n          <label htmlFor=\"description\">Item Description</label>\r\n          <input type=\"text\" {...bindDescription} />\r\n      <div className=\"form-group\">\r\n          <label htmlFor=\"category\">Category (soon will be a list of eli's enumerated services</label>\r\n          <input type=\"text\" {...bindCateogry} />\r\n      </div>\r\n               <div className=\"form-group\">\r\n                <label htmlFor=\"ItemPrice\">Price</label>\r\n                  <input type=\"text\" {...bindPrice} />\r\n                </div>\r\n            <input className=\"bg-primary\" type=\"button\" value=\"Submit\"\r\n               onClick={ () => onSend()} text=\"helloworldAddServices\"/>\r\n  \r\n               </div>\r\n      </form>\r\n      </>)\r\n}\r\n\r\nexport default AddServices;","\r\n                   import React, {useEffect, useState} from 'react';\r\n                   import {Link} from 'react-router-dom'\r\n                   import {useParams} from 'react-router-dom'\r\n                   import axios from 'axios'\r\n                   import Loading from \"../loading\"\r\n                   import {Tab, Tabs, TabList, TabPanel} from 'react-tabs'\r\n                   import 'react-tabs/style/react-tabs.css'\r\n                   import {CustomPlaceholder} from \"react-placeholder-image\";\r\n                   import ReviewBox from \"../profile/reviewBox\";\r\n                   import Rating from \"../rating/rating\"\r\n                   import ServicesList from \"./servicesList\";\r\n                   import {AddServices} from \"./addServices\";\r\n                   const ServicesOffered = () => {\r\n                    const [stylist, setStylist] = useState({});\r\n                    const [isLoading, setIsLoading] = useState(true);\r\n                    const stylistId = useParams();\r\n                    const URL = \"http://localhost:8000\";\r\n\r\n        useEffect(() => {\r\n                        const fetchStylist = async () => {\r\n                            await axios.get(`${URL}/stylists/${stylistId.id}`)\r\n                            .then(res => {\r\n                                    const stylistData = res.data.stylist\r\n                                    setStylist(stylistData)\r\n                                    setIsLoading(false)\r\n                                })\r\n                        }\r\n                        fetchStylist()\r\n                    }, [stylist])\r\n                        return (\r\n                            <div className=\"container-fluid w-75 my-2\">\r\n                                <Link to={`/stylists/stylistLanding/stylistId=${stylistId.id}`}>\r\n                             Back To Your Home Page                                \r\n                             </Link>\r\n                             <ServicesList\r\n                             id={stylist.id}\r\n                        />\r\n                            <AddServices\r\n                            id={stylist.id}\r\n                            />\r\n                            </div>\r\n                        );\r\n                    };\r\nexport default ServicesOffered;","import * as React from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { ViewState,   EditingState, } from '@devexpress/dx-react-scheduler';\r\nimport {\r\n  Scheduler,\r\n  DayView,\r\n  WeekView,\r\n  Appointments,\r\n  Toolbar,\r\n  ViewSwitcher,\r\n  MonthView,\r\n  AppointmentForm,\r\n  AppointmentTooltip,\r\n  EditRecurrenceMenu,\r\n  AllDayPanel,\r\n  ConfirmationDialog,\r\n} from '@devexpress/dx-react-scheduler-material-ui';\r\nimport {useParams} from 'react-router-dom'\r\nimport axios from 'axios'\r\n\r\n\r\nexport default class StylistCalendar extends React.PureComponent {\r\n      state = {\r\n    data: [],\r\n    stylist: {},\r\n    currentDate: new Date().toLocaleString(),\r\n    URL: `http://localhost:8000`,\r\n    stylistId: this.props.match.params.id,\r\n    addedAppointment: {},\r\n    appointmentChanges: {},\r\n    editingAppointment: undefined,\r\n  };\r\n  constructor(props) {\r\n    super(props);\r\n    this.commitChanges = this.commitChanges.bind(this);\r\n    this.changeAddedAppointment = this.changeAddedAppointment.bind(this);\r\n    this.changeAppointmentChanges = this.changeAppointmentChanges.bind(this);\r\n    this.changeEditingAppointment = this.changeEditingAppointment.bind(this);\r\n  }\r\n\r\ngetStylistByID = (id) => {\r\n  return new Promise((resolve, reject) => {\r\n     axios.get(`http://localhost:8000/stylists/${id}`)\r\n      .then(x => resolve(x.data.stylist))\r\n      .catch(e => {\r\n          alert(e);\r\n          reject();\r\n      });\r\n  });\r\n}\r\n\r\n  changeAddedAppointment(addedAppointment) {\r\n    this.setState({ addedAppointment });\r\n  }\r\n\r\n  changeAppointmentChanges(appointmentChanges) {\r\n    this.setState({ appointmentChanges });\r\n  }\r\n\r\n  changeEditingAppointment(editingAppointment) {\r\n    this.setState({ editingAppointment });\r\n  }\r\n\r\n  commitChanges({ added, changed, deleted }) {\r\n    this.setState((state) => {\r\n      let { data } = state;\r\n      if (added) {\r\n        const startingAddedId = data.length > 0 ? data[data.length - 1].id + 1 : 0;\r\n        data = [...data, { id: startingAddedId, ...added }];\r\n      }\r\n      if (changed) {\r\n        data = data.map(appointment => (\r\n          changed[appointment.id] ? { ...appointment, ...changed[appointment.id] } : appointment));\r\n      }\r\n      if (deleted !== undefined) {\r\n        data = data.filter(appointment => appointment.id !== deleted);\r\n      }\r\n      return { data };\r\n    });\r\n  }\r\n  render() {\r\n    const {currentDate, data, addedAppointment, appointmentChanges, editingAppointment,\r\n  } = this.state;\r\n    return (\r\n      <Paper>\r\n        <Scheduler\r\n          data={data}\r\n          height={660}\r\n        >\r\n          <ViewState\r\n            defaultCurrentDate={currentDate}\r\n            defaultCurrentViewName=\"Week\"\r\n          />\r\n          <EditingState\r\n            onCommitChanges={this.commitChanges}\r\n\r\n            addedAppointment={addedAppointment}\r\n            onAddedAppointmentChange={this.changeAddedAppointment}\r\n\r\n            appointmentChanges={appointmentChanges}\r\n            onAppointmentChangesChange={this.changeAppointmentChanges}\r\n\r\n            editingAppointment={editingAppointment}\r\n            onEditingAppointmentChange={this.changeEditingAppointment}\r\n          />\r\n          <DayView\r\n            startDayHour={9}\r\n            endDayHour={18}\r\n          />\r\n          <WeekView\r\n            startDayHour={10}\r\n            endDayHour={19}\r\n          />\r\n             <MonthView\r\n            startDayHour={10}\r\n            endDayHour={19}\r\n          />\r\n\r\n          <Toolbar />\r\n          <ViewSwitcher />\r\n          <Appointments />\r\n        </Scheduler>\r\n      </Paper>\r\n    );\r\n  }\r\n  componentDidMount() {\r\n    this.getStylistByID(this.state.stylistId).then(stylist => this.setState({stylist}, () => {\r\n      this.setState({data: stylist.appointments})\r\n    }));\r\n     }\r\n}\r\n","import React from 'react';\r\n\r\nconst AppointmentsList = ({appointments}) => {\r\n    return (\r\n        <div>\r\n            {console.log(appointments)}\r\n            <ul className=\"list-group\">\r\n                {appointments.map((appointment, index) =>\r\n                    <li key={index} className=\"list-group-item m-2\">\r\n                        <h2>{appointment.title}</h2>\r\n                        <p>{appointment.startDate} to {appointment.endDate}</p>\r\n                        <p>Location: {appointment.location}</p>\r\n\r\n                    </li>\r\n                )}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AppointmentsList;\r\n","import UserLanding from \"./components/landing/userLanding\";\r\nimport StylistsList from \"./components/search/stylistsList\";\r\nimport ChangePassword from \"./components/changePassword\";\r\nimport StylistProfile from \"./components/profile/stylistProfile\";\r\nimport EditProfile from \"./components/profile/editProfile\";\r\nimport SendPassword from \"./components/sendPassword\";\r\nimport StylistLanding from \"./components/stylistLanding\";\r\nimport ServicesOffered from \"./components/stylist/servicesOffered\";\r\n import StylistCalendar from \"./components/stylist/stylistCalendar\";\r\nimport UserProfile from \"./components/profile/userProfile\";\r\n\r\nexport const ROUTES = [\r\n    {path: \"/editProfile\", component: EditProfile},\r\n    {path: \"/userProfile\", component: UserProfile},\r\n    {path: \"/userLanding\", component: UserLanding},\r\n    {path: \"/stylists/search/name=:name?&service=:service?&min=:min?\", component: StylistsList},\r\n    {path: \"/changePassword/:id\", component: ChangePassword},\r\n    {path: \"/stylist/stylistId=:id\", component: StylistProfile},\r\n    {path: \"/resetPassword\", component: SendPassword},\r\n    {path: \"/stylists/stylistLanding/stylistId=:id\", component: StylistLanding},\r\n    {path: \"/services/servicesOffered/stylistId=:id\", component: ServicesOffered},\r\n    {path: \"/stylists/stylistCalendar/stylistId=:id\", component: StylistCalendar},\r\n    {path: \"/stylist/stylistId=:id\", component: StylistProfile}\r\n]","import React, {useEffect, useState} from 'react';\r\nimport {useParams} from 'react-router-dom'\r\nimport axios from 'axios'\r\nimport Loading from \"../loading\"\r\nimport {Tab, Tabs, TabList, TabPanel} from 'react-tabs'\r\nimport 'react-tabs/style/react-tabs.css'\r\nimport {CustomPlaceholder} from \"react-placeholder-image\";\r\nimport ReviewBox from \"./reviewBox\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {Link} from \"react-router-dom\";\r\nimport AppointmentsList from \"./appointmentsList\";\r\n\r\nconst UserProfile = () => {\r\n    const [isLoading, setIsLoading] = useState(true);\r\n\r\n    const token = localStorage.jwtToken\r\n\r\n    const [user, setUser] = useState({})\r\n\r\n    const [futureAppointments, setFutureAppointments] = useState([]);\r\n    const [pastAppointments, setPastAppointments] = useState([]);\r\n\r\n    const store = useSelector(state => state.auth)\r\n    const userId = store.user.id\r\n\r\n    const URL = 'http://localhost:8000/users/appointments/'\r\n\r\n    useEffect(() => {\r\n        const fetchUser = async () => {\r\n            await axios.get(\"http://localhost:8000/users/me\", {\r\n                headers: {\r\n                    Authorization: 'Bearer '+token\r\n                }\r\n            })\r\n                .then(res => {\r\n                    setUser(res.data.user)\r\n                    setIsLoading(false)\r\n                })\r\n                .catch(err => console.log(err))\r\n        }\r\n        fetchUser()\r\n    }, [])\r\n\r\n\r\n    useEffect(() => {\r\n        const fetchAppointments = async () => {\r\n            await axios.get(URL + userId)\r\n                .then(res => {\r\n                    let returnedAppointments = res.data.appointments\r\n                    let past = []\r\n                    let future =[]\r\n                    returnedAppointments.forEach(appointment => {\r\n                        let startDate = new Date(appointment.startDate)\r\n                        let endDate = new Date(appointment.endDate)\r\n                        const now = new Date().toLocaleString()\r\n                        appointment.startDate = startDate.toLocaleString()\r\n                        appointment.endDate = endDate.toLocaleString()\r\n                        if (appointment.endDate < now) {\r\n                            past = [...past, appointment]\r\n                        }\r\n                        else {\r\n                            future = [...future, appointment]\r\n                        }\r\n                    })\r\n                    setPastAppointments(past)\r\n                    setFutureAppointments(future)\r\n                    setIsLoading(false)\r\n                })\r\n                .catch(err => console.log(err))\r\n        }\r\n        fetchAppointments()\r\n    }, [])\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"h-100\">\r\n            {\r\n                isLoading ? <Loading/> :\r\n                    <div className=\"container\">\r\n                        <div className=\"card card-signin flex-row my-5\">\r\n                            <div className=\"card-body\">\r\n                                <div className=\"row mb-4\">\r\n                                    <div className=\"col-10\">\r\n                                        <h2 className=\"text-center display-4 mb-4\">{`${user.firstName} ${user.lastName}`}</h2>\r\n                                        <h5>Contact Information</h5>\r\n                                        <ul className=\"list-group list-group-flush\">\r\n                                            <li className=\"list-group-item\">Phone Number: {user.number === '' ? 'None' : user.number}</li>\r\n                                            <li className=\"list-group-item\">Email: {user.email === '' ? 'None' : user.email}</li>\r\n                                            <li className=\"list-group-item\">Address: {user.address === '' ? 'None' : user.address}</li>\r\n                                        </ul>\r\n                                    </div>\r\n                                    <div className=\"col-2 justify-content-end\">\r\n                                        <Link to=\"/editProfile\" className=\"btn btn-info\">Edit Profile</Link>\r\n                                    </div>\r\n\r\n                                </div>\r\n\r\n                                <Tabs>\r\n                                    <TabList>\r\n                                        <Tab>Upcoming Appointments</Tab>\r\n                                        <Tab>Past Appointments</Tab>\r\n                                    </TabList>\r\n\r\n                                    <TabPanel>\r\n                                        <AppointmentsList appointments={futureAppointments}/>\r\n                                    </TabPanel>\r\n                                    <TabPanel>\r\n                                        <AppointmentsList appointments={pastAppointments}/>\r\n                                    </TabPanel>\r\n                                </Tabs>\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n            }\r\n        </div>\r\n\r\n\r\n    );\r\n};\r\n\r\nexport default UserProfile;\r\n","import React, {Component} from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {logoutUser} from \"../actions/authActions\";\r\nimport {Link} from 'react-router-dom'\r\nimport SearchBar from \"./search/searchBar\";\r\nimport StylistNav from \"./stylistNav\";\r\nimport ServicesOffered from \"./stylist/servicesOffered\";\r\nimport  * as StylistCalendar from \"./stylist/stylistCalendar\";\r\nimport AddServices from \"./stylist/addServices\";\r\nconst appointmentsOrAdd = ({stylist}) => {\r\n    if (stylist.appointments === undefined){\r\n            return (\r\n                <div>\r\n            You have no appointments and we will make functionality soon undefined option</div>);\r\n    }\r\n    if (stylist.services === undefined) {\r\n        return (<div>\r\n            You need to add services that you offer before you are able to have customers book appointments with\r\n        <AddServices stylist={stylist}/>\r\n        </div>\r\n        );\r\n       } \r\n    if ((stylist.appointments != undefined)){\r\n        return (<StylistCalendar/>);\r\n    } else {\r\n        return (<div>You have no appointments and we will make functionality soon</div>)\r\n    }\r\n}\r\nconst StylistLanding = () => {\r\n    const {user} = useSelector(state => state.auth);\r\n    return (\r\n        <div className=\"container justify-content-center align-items-center h-100\">\r\n            <div className=\"row\">\r\n                <div className=\"col-6 mx-auto  align-self-center text-center\">\r\n                    <h1><b>Hello</b>, {user.firstName}</h1>\r\n                </div>\r\n<div className=\"justify-content-center container valign-wrapper\">\r\n{StylistNav(user.firstName, user.id)}\r\n<h1> Hello {`${user.firstName}  ${user.lastName}`} welcome to Ultimate Style!\r\n            </h1>\r\n                <img src={user.photo}/>\r\n                <div className=\"container\">\r\n\r\n                </div>\r\n              {appointmentsOrAdd({stylist: user})}\r\n            <div>\r\n    <div className=\"row\">\r\n        <div className=\"col center-align\">\r\n                <Link\r\n                    to={`/stylists/stylistCalendar/stylistId=${user.id}`}\r\n                    style={{\r\n                        width: \"140px\",\r\n                        borderRadius: \"3px\",\r\n                        letterSpacing: \"1.5px\",\r\n                        padding: \"12px\"\r\n                    }}\r\n                    className=\"btn btn-large btn-flat waves-effect blue black-text\"\r\n                >Calendar</Link>\r\n                <Link\r\n                    to=\"/\"\r\n                    style={{\r\n                        width: \"140px\",\r\n                        borderRadius: \"3px\",\r\n                        letterSpacing: \"1.5px\",\r\n                        padding: \"12px\"\r\n                    }}\r\n                    className=\"btn btn-large btn-flat waves-effect blue black-text\"\r\n                >Back to home</Link>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default StylistLanding;\r\n\r\n","import React from 'react';\r\nimport './App.css';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport { Provider, useDispatch } from 'react-redux';\r\nimport { setCurrentUser, logoutUser } from './actions/authActions';\r\nimport jwt_decode from 'jwt-decode';\r\nimport PrivateRoute from './components/PrivateRoute';\r\nimport Navigation from './components/navigation';\r\nimport Landing from './components/landing';\r\nimport Login from './components/login/login';\r\nimport RegisterUser from './components/register/registerUser';\r\nimport RegisterStylist from './components/register/registerStylist';\r\nimport setAuthToken from './utils/setAuthToken';\r\nimport store from './store';\r\nimport { ROUTES } from './routes';\r\nimport SendPassword from './components/sendPassword';\r\nimport ChangePassword from './components/changePassword';\r\nimport StylistsList from './components/search/stylistsList';\r\n\r\n// Check for token to keep user logged in\r\nif (localStorage.jwtToken) {\r\n    // Set auth token header auth\r\n    const token = localStorage.jwtToken;\r\n    setAuthToken(token);\r\n    // Decode token and get user info and exp\r\n    const decoded = jwt_decode(token);\r\n    // Set user and isAuthenticated\r\n    store.dispatch(setCurrentUser(decoded));\r\n    // Check for expired token\r\n    const currentTime = Date.now() / 1000; // to get in milliseconds\r\n    if (decoded.exp < currentTime) {\r\n        // Logout user\r\n        store.dispatch(logoutUser());\r\n        // Redirect to login\r\n        window.location.href = '/login';\r\n    }\r\n}\r\n\r\nfunction App() {\r\n    return (\r\n        <Provider store={store}>\r\n            <div className='App'>\r\n                <Router>\r\n                    <Navigation />\r\n                    <Route exact path='/' component={Landing} />\r\n                    <Route exact path='/home' component={Landing} />\r\n                    <Route exact path='/login' component={Login} />\r\n                    <Route\r\n                        exact\r\n                        path='/user/register'\r\n                        component={RegisterUser}\r\n                    />\r\n                    <Route\r\n                        exact\r\n                        path='/stylist/register'\r\n                        component={RegisterStylist}\r\n                    />\r\n                    <Route\r\n                        exact\r\n                        path='/resetPassword'\r\n                        component={SendPassword}\r\n                    />\r\n                    <Switch>\r\n                        {ROUTES.map((route, i) => (\r\n                            <PrivateRoute exact key={i} {...route} />\r\n                        ))}\r\n                    </Switch>\r\n                </Router>\r\n            </div>\r\n        </Provider>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n// Importing the Bootstrap CSS\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}