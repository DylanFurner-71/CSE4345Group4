{"version":3,"sources":["UltimateStyle.png","utils/setAuthToken.js","actions/types.js","actions/authActions.js","components/PrivateRoute.js","components/navigation.js","components/register/registerPopup.js","components/landing.js","components/login/login.js","components/register/registerUser.js","components/register/registerStylist.js","reducers/errorReducer.js","reducers/authReducer.js","reducers/index.js","store.js","components/landing/serviceBox.js","components/landing/userLanding.js","components/rating/rating.js","components/search/stylistInfo.js","components/loading.js","components/rating/ratingFilter.js","components/search/searchFilter.js","components/search/map.js","components/search/stylistsList.js","components/changePassword.js","components/profile/reviewBox.js","components/profile/services.js","components/profile/stylistProfile.js","components/profile/editProfile.js","components/sendPassword.js","components/stylist/stylistCalendar.js","components/hooks/InputHook.js","components/stylist/addServices.js","components/stylistLanding.js","components/stylist/servicesList.js","components/stylist/servicesOffered.js","components/profile/userProfile.js","actions/stylistActions.js","components/stylist/appointmentsCard.js","components/stylist/upcomingAppointments.js","routes.js","components/stylist/pastApointments.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","setAuthToken","token","axios","defaults","headers","common","GET_ERRORS","baseURL","setCurrentUser","user","type","payload","logoutUser","dispatch","localStorage","removeItem","connect","state","auth","Component","component","rest","render","props","isAuthenticated","to","Navigation","useState","name","setName","useSelector","useDispatch","onLogout","role","Navbar","bg","variant","expand","className","fixed","Brand","href","id","Toggle","aria-controls","Collapse","Nav","Link","onClick","NavDropdown","title","Item","searchURL","Form","inline","FormControl","onChange","event","target","value","placeholder","Button","RegisterPopup","Modal","centered","Header","closeButton","Title","Body","Landing","modalShow","setModalShow","style","height","width","src","require","show","onHide","Login","onCheck","e","isStylist","setState","onSubmit","preventDefault","userData","email","password","login","error","this","history","push","nextProps","console","log","classnames","invalid","emailnotfound","htmlFor","passwordincorrect","class","checked","post","then","res","data","setItem","decoded","jwt_decode","catch","err","response","RegisterUser","newUser","firstName","lastName","password2","registerUser","required","autoFocus","withRouter","RegisterStylist","newUserStylist","texasID","businessName","photo","address","registerStylist","paddingLeft","noValidate","borderRadius","letterSpacing","marginTop","initialState","isEmpty","loading","rootReducer","combineReducers","action","middleware","thunk","store","createStore","undefined","compose","applyMiddleware","ServiceBox","imageURL","service","alt","UserLanding","imageURLs","map","index","key","Rating","rating","x","StylistInfo","stylist","_id","textDecoration","backgroundColor","textColor","text","average","reviews","length","Loading","color","RatingFilter","types","queries","listStyleType","SearchFilter","LocationPin","lng","lat","onClickLocation","clicked","icon","locationIcon","number","services","i","toString","Map","location","stylists","center","setCenter","zoom","setTarget","isMountRef","useRef","useEffect","current","useIsMount","bootstrapURLKeys","defaultZoom","onDrag","coordinates","handleClick","StylistsList","setStylists","isLoading","setIsLoading","query","useParams","split","params","forEach","a","get","getStylists","filter","ChangePassword","useStore","getState","newPassword","setNewPassword","onSend","put","ReviewBox","review","reviewerName","score","notes","Services","toUpperCase","StylistProfile","setStylist","stylistId","stylistData","fetchStylist","EditProfile","setEmail","currentState","SendPassword","alert","StylistCalendar","currentDate","Date","toLocaleString","URL","match","addedAppointment","appointmentChanges","editingAppointment","getStylistByID","Promise","resolve","reject","commitChanges","bind","changeAddedAppointment","changeAppointmentChanges","changeEditingAppointment","added","changed","deleted","startingAddedId","appointment","Paper","defaultCurrentDate","defaultCurrentViewName","onCommitChanges","onAddedAppointmentChange","onAppointmentChangesChange","onEditingAppointmentChange","startDayHour","endDayHour","showOpenButton","showDeleteButton","appointments","React","useInput","initialValue","setValue","reset","AddServices","bindName","resetName","description","bindDescription","resetDescription","price","bindPrice","resetPrice","category","bindCateogry","resetCategory","callAxios","StylistLanding","appointmentsOrAdd","padding","ServicesList","cateogry","ServicesOffered","UserProfile","jwtToken","setUser","Authorization","fetchUser","AppointmentsCard","startDate","endDate","appointments2","allDay","ROUTES","path","currentTime","now","exp","window","App","exact","route","Boolean","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.0fc8ff78.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/UltimateStyle.7adb92eb.png\";","import axios from \"axios\";\r\nconst setAuthToken = token => {\r\n    if (token) {\r\n        // Apply authorization token to every request if logged in\r\n        axios.defaults.headers.common[\"Authorization\"] = token;\r\n    } else {\r\n        // Delete auth header\r\n        delete axios.defaults.headers.common[\"Authorization\"];\r\n    }\r\n};\r\nexport default setAuthToken;","export const GET_ERRORS = \"GET_ERRORS\";\r\nexport const USER_LOADING = \"USER_LOADING\";\r\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";\r\nexport const LOGOUT = 'LOGOUT';\r\n","import axios from \"axios\";\r\nimport setAuthToken from \"../utils/setAuthToken\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport {\r\n    GET_ERRORS,\r\n    SET_CURRENT_USER,\r\n    USER_LOADING\r\n} from \"./types\";\r\n// Register User\r\nconst api = \"http://localhost:8000\";\r\naxios.defaults.baseURL = api;\r\nexport const registerUser = (userData, history) => dispatch => {\r\n    axios\r\n        .post(\"/users/register\", userData)\r\n        .then(() => history.push(\"/login\")) // re-direct to login on successful register\r\n        .catch(err =>\r\n            dispatch({\r\n                type: GET_ERRORS,\r\n                payload: err.response.data\r\n            })\r\n        );\r\n};\r\n\r\n// Register Stylist\r\nexport const registerStylist = (userData, history) => dispatch => {\r\n    axios\r\n        .post(\"/stylists/register\", userData)\r\n        .then(() => history.push(\"/login\")) // re-direct to login on successful register\r\n        .catch(err =>\r\n            dispatch({\r\n                type: GET_ERRORS,\r\n                payload: err.response.data\r\n            })\r\n        );\r\n};\r\n\r\n//registerSylistUserWillBe updated once I figure out how to correctlyCheck the texas ID database\r\nexport const registerUserStylist = (userData, history) => dispatch => {\r\n    axios\r\n        .post(`/stylists/register/create`, userData)\r\n        .then(() => history.push(\"/stylists/stylistLanding\")) // re-direct to login on successful register\r\n        .catch(err =>\r\n            dispatch({\r\n                type: GET_ERRORS,\r\n                payload: err.response.data\r\n            })\r\n        );\r\n};\r\n// Change Password\r\nexport const changePassword = (userData, history) => dispatch => {\r\n    axios\r\n        .post(\"/users/changePassword\", userData)\r\n        .then(() => history.push(\"/home\")) // re-direct to home after changing password\r\n        .catch(err =>\r\n            dispatch({\r\n                type: GET_ERRORS,\r\n                payload: err.response.data\r\n            })\r\n        );\r\n};\r\nexport const login = userData => dispatch => {\r\n    if (userData.isStylist === true){\r\n        axios\r\n        .post(\"/stylists/login\", userData)\r\n        .then(res => {\r\n            // Save to localStorage\r\n// Set token to localStorage\r\n            // console.log(res.data)\r\n            const {token} = res.data;\r\n            localStorage.setItem(\"jwtToken\", token);\r\n\r\n            // Set token to Auth header\r\n            setAuthToken(token);\r\n            // Decode token to get user data\r\n            const decoded = jwt_decode(token);\r\n            // Set current user\r\n            dispatch(setCurrentUser(decoded));\r\n        })\r\n        .catch(err => {\r\n                dispatch({\r\n                    type: GET_ERRORS,\r\n                    payload: err.response.data\r\n                })\r\n            }\r\n        );\r\n    } else {\r\n    axios\r\n        .post(\"/users/login\", userData)\r\n        .then(res => {\r\n            // Save to localStorage\r\n// Set token to localStorage\r\n            // console.log(res.data)\r\n            const {token} = res.data;\r\n            localStorage.setItem(\"jwtToken\", token);\r\n\r\n            // Set token to Auth header\r\n            setAuthToken(token);\r\n            // Decode token to get user data\r\n            const decoded = jwt_decode(token);\r\n            // Set current user\r\n            dispatch(setCurrentUser(decoded));\r\n        })\r\n        .catch(err => {\r\n                dispatch({\r\n                    type: GET_ERRORS,\r\n                    payload: err.response.data\r\n                })\r\n            }\r\n        );\r\n    }\r\n};\r\n// Login - get user token\r\nexport const loginUser = userData => dispatch => {\r\n    axios\r\n        .post(\"/users/login\", userData)\r\n        .then(res => {\r\n            // Save to localStorage\r\n// Set token to localStorage\r\n            // console.log(res.data)\r\n            const {token} = res.data;\r\n            localStorage.setItem(\"jwtToken\", token);\r\n\r\n            // Set token to Auth header\r\n            setAuthToken(token);\r\n            // Decode token to get user data\r\n            const decoded = jwt_decode(token);\r\n            // Set current user\r\n            dispatch(setCurrentUser(decoded));\r\n        })\r\n        .catch(err => {\r\n                dispatch({\r\n                    type: GET_ERRORS,\r\n                    payload: err.response.data\r\n                })\r\n            }\r\n        );\r\n};\r\nexport const loginStylist = userData => dispatch => {\r\n    axios\r\n        .post(\"/stylists/login\", userData)\r\n        .then(res => {\r\n            // Save to localStorage\r\n// Set token to localStorage\r\n            // console.log(res.data)\r\n            const {token} = res.data;\r\n            localStorage.setItem(\"jwtToken\", token);\r\n\r\n            // Set token to Auth header\r\n            setAuthToken(token);\r\n            // Decode token to get user data\r\n            const decoded = jwt_decode(token);\r\n            // Set current user\r\n            dispatch(setCurrentUser(decoded));\r\n        })\r\n        .catch(err => {\r\n                dispatch({\r\n                    type: GET_ERRORS,\r\n                    payload: err.response.data\r\n                })\r\n            }\r\n        );\r\n};\r\n// Set logged in user\r\nexport const setCurrentUser = user => {\r\n    return {\r\n        type: SET_CURRENT_USER,\r\n        payload: user\r\n    };\r\n};\r\n// User loading\r\nexport const setUserLoading = () => {\r\n    return {\r\n        type: USER_LOADING\r\n    };\r\n};\r\n// Log user out\r\nexport const logoutUser = () => dispatch => {\r\n    // Remove token from local storage\r\n    localStorage.removeItem(\"jwtToken\");\r\n    // Remove auth header for future requests\r\n    setAuthToken(false);\r\n    // Set current user to empty object {} which will set isAuthenticated to false\r\n    dispatch(setCurrentUser({}));\r\n\r\n};","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nconst PrivateRoute = ({ component: Component, auth, ...rest }) => (\r\n    <Route\r\n        {...rest}\r\n        render={props =>\r\n            auth.isAuthenticated === true ? (\r\n                <Component {...props} />\r\n            ) : (\r\n                <Redirect to=\"/\" />\r\n            )\r\n        }\r\n    />\r\n);\r\nPrivateRoute.propTypes = {\r\n    auth: PropTypes.object.isRequired\r\n};\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth\r\n});\r\nexport default connect(mapStateToProps)(PrivateRoute);","import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport {\r\n    Button,\r\n    Navbar,\r\n    Nav,\r\n    NavDropdown,\r\n    Form,\r\n    FormControl,\r\n} from 'react-bootstrap';\r\nimport { useDispatch, useSelector, useStore } from 'react-redux';\r\nimport { logoutUser } from '../actions/authActions';\r\nconst URL = `http://localhost:8000/api`;\r\n\r\nconst Navigation = () => {\r\n    const [name, setName] = useState('');\r\n    const searchURL = '/stylists/search/';\r\n    const user = useSelector(state => state.auth);\r\n    const dispatch = useDispatch();\r\n    const onLogout = () => {\r\n        dispatch(logoutUser());\r\n    };\r\n    if (user.user.role === 'stylist') {\r\n        return (\r\n            <div>\r\n                <Navbar\r\n                    bg='light'\r\n                    variant='light'\r\n                    expand='lg'\r\n                    className='border-bottom'\r\n                    fixed='top'\r\n                >\r\n                    <Navbar.Brand\r\n                        href={`/stylists/stylistLanding/stylistId=${user.user.id}`}\r\n                    >\r\n                        Ultimate Style\r\n                    </Navbar.Brand>\r\n                    <Navbar.Toggle aria-controls='basic-navbar-nav' />\r\n                    <Navbar.Collapse id='basic-navbar-nav'>\r\n                        <Nav className='mr-auto'>\r\n                            <Nav.Link\r\n                                href={`/stylists/appointments/upcoming/stylistId=${user.user.id}`}\r\n                            >\r\n                                Upcoming Appointments\r\n                            </Nav.Link>\r\n                            <Nav.Link\r\n                                href={`/stylists/appointments/past/stylistId=${user.user.id}`}\r\n                            >\r\n                                Past Appointments\r\n                            </Nav.Link>\r\n                            <Nav.Link\r\n                                href={`/services/servicesOffered/stylistId=${user.user.id}`}\r\n                            >\r\n                                Services Offered\r\n                            </Nav.Link>\r\n                            <Nav.Link\r\n                                href={`/stylists/stylistCalendar/stylistId=${user.user.id}`}\r\n                            >\r\n                                Calendar{' '}\r\n                            </Nav.Link>\r\n                            <Nav.Link href='/stylists/StylistProfile'>\r\n                                My Profile\r\n                            </Nav.Link>\r\n                        </Nav>\r\n                    </Navbar.Collapse>\r\n                    {user.isAuthenticated ? (\r\n                        <button\r\n                            onClick={onLogout}\r\n                            className='btn btn-warning mx-2'\r\n                        >\r\n                            Logout\r\n                        </button>\r\n                    ) : (\r\n                        <></>\r\n                    )}\r\n                </Navbar>\r\n            </div>\r\n        );\r\n    } else {\r\n        return (\r\n            <div>\r\n                {/*make nav bar bigger brigher*/}\r\n                <Navbar\r\n                    bg='light'\r\n                    variant='light'\r\n                    expand='lg'\r\n                    className='border-bottom'\r\n                    fixed='top'\r\n                >\r\n                    <Navbar.Brand href='/userLanding'>\r\n                        Ultimate Style\r\n                    </Navbar.Brand>\r\n                    <Navbar.Toggle aria-controls='basic-navbar-nav' />\r\n                    <Navbar.Collapse id='basic-navbar-nav'>\r\n                        <Nav className='mr-auto'>\r\n                            <NavDropdown\r\n                                title='Services'\r\n                                id='basic-nav-dropdown'\r\n                            >\r\n                                {/*<NavDropdown.Item href=\"/retail\">Overview</NavDropdown.Item>*/}\r\n                                <NavDropdown.Item\r\n                                    href={searchURL + 'services/haircuts'}\r\n                                >\r\n                                    Haircuts\r\n                                </NavDropdown.Item>\r\n                                <NavDropdown.Item\r\n                                    href={searchURL + 'services/waxing'}\r\n                                >\r\n                                    Waxing\r\n                                </NavDropdown.Item>\r\n                            </NavDropdown>\r\n                            <Nav.Link href='/UserProfile'>My Profile</Nav.Link>\r\n                        </Nav>\r\n                    </Navbar.Collapse>\r\n                    <Form inline>\r\n                        <FormControl\r\n                            onChange={event => setName(event.target.value)}\r\n                            value={name}\r\n                            type='text'\r\n                            placeholder='Stylist'\r\n                            className='mr-sm-2'\r\n                        />\r\n                    </Form>\r\n                    <a href={`${searchURL}name/${name}`}>\r\n                        <Button variant='dark'>Search</Button>\r\n                    </a>\r\n                    {user.isAuthenticated ? (\r\n                        <button\r\n                            onClick={onLogout}\r\n                            className='btn btn-warning mx-2'\r\n                        >\r\n                            Logout\r\n                        </button>\r\n                    ) : (\r\n                        <></>\r\n                    )}\r\n                </Navbar>\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default Navigation;\r\n","import React from 'react';\r\nimport {Link} from \"react-router-dom\";\r\nimport {Modal} from \"react-bootstrap\";\r\n\r\n// The popup when user clicks on \"register\" on the landing page\r\nconst RegisterPopup = props => {\r\n    return (\r\n        <div>\r\n            <Modal\r\n                {...props}\r\n                centered\r\n            >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>\r\n                        Register for Ultimate Style\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body className=\"mx-auto\">\r\n                    <Link to=\"/user/register\" className=\"btn btn-primary btn-lg mt-4 mb-4\">Register as a Client</Link>\r\n                    <h5 className=\"mx-auto text-center\">Or</h5>\r\n                    <Link to=\"/stylist/register\" className=\"btn btn-primary btn-lg mt-4 mb-4\">Register as a Stylist</Link>\r\n                </Modal.Body>\r\n            </Modal>\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\nexport default RegisterPopup;\r\n","import React, {useState} from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport RegisterPopup from \"./register/registerPopup\";\r\n\r\nconst Landing = () => {\r\n    const [modalShow, setModalShow] = useState(false);\r\n\r\n    return (\r\n        <div style={{ height: \"75vh\" }} className=\"container\">\r\n            <div className=\"d-flex justify-content-center flex-column\">\r\n                <img className=\"mx-auto\" style={{ width: \"100px\", height: \"100px\"}} src={require(\"../UltimateStyle.png\" )}/>\r\n                <h1 className=\"mx-auto\">\r\n                    <b>Welcome</b> to Ultimate Style\r\n                </h1>\r\n                <p className=\"mx-auto text-secondary\">\r\n                    Review and book stylist made easy\r\n                </p>\r\n                <div className=\"mx-auto d-flex justify-content-center\">\r\n                    <Link\r\n                        to=\"/login\"\r\n                        className=\"btn btn-primary m-2\"\r\n                    >Log In</Link>\r\n                    {/*<Link*/}\r\n                    {/*    to=\"/register\"*/}\r\n                    {/*    style={{*/}\r\n                    {/*        width: \"140px\",*/}\r\n                    {/*        borderRadius: \"3px\",*/}\r\n                    {/*        letterSpacing: \"1.5px\",*/}\r\n                    {/*        */}\r\n                    {/*    }}*/}\r\n                    {/*    className=\"btn btn-large btn-flat waves-effect blue black-text m-2\"*/}\r\n                    {/*>Register</Link>*/}\r\n                    <button onClick={() => setModalShow(true)} className=\"btn btn-primary m-2\">\r\n                        Register\r\n                    </button>\r\n                    <RegisterPopup\r\n                        show={modalShow}\r\n                        onHide={() => setModalShow(false)}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n\r\n}\r\n\r\nexport default Landing;\r\n","\r\n\r\nimport React, {Component} from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport {connect} from \"react-redux\";\r\nimport {login} from \"../../actions/authActions\";\r\nimport classnames from \"classnames\";\r\nimport \"../register/register.css\"\r\nimport RegisterPopup from \"../register/registerPopup\";\r\n\r\nclass Login extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            email: \"\",\r\n            password: \"\",\r\n            modalShow: false,\r\n            isStylist: false,\r\n            error: {}\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        // If logged in and user navigates to Login page, should redirect them to dashboard\r\n        if (this.props.auth.isAuthenticated) {\r\n            if (this.state.isStylist === true){\r\n            this.props.history.push(`/stylists/stylistLanding/stylistId=${this.props.auth.user.id}`); // push user to dashboard when they login\r\n            } else {\r\n                this.props.history.push(\"/userLanding\");\r\n            }\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        if (nextProps.auth.isAuthenticated) {\r\n            console.log(nextProps.auth);\r\n            if (this.state.isStylist === true){\r\n            this.props.history.push(`/stylists/stylistLanding/stylistId=${nextProps.auth.user.id}`); // push user to dashboard when they login\r\n            } else {\r\n                this.props.history.push(\"/userLanding\");\r\n            }\r\n        }\r\n        if (nextProps.error) {\r\n            this.setState({\r\n                error: nextProps.error\r\n            });\r\n        }\r\n    }\r\n    onCheck = e => {\r\n        if (this.state.isStylist === false){\r\n        this.setState(({isStylist: true}));\r\n        } else {\r\n            this.setState(({isStylist: false}));\r\n        }\r\n    }\r\n    onChange = e => {\r\n        this.setState({[e.target.id]: e.target.value});\r\n    };\r\n    onSubmit = e => {\r\n        e.preventDefault();\r\n        const userData = {\r\n            email: this.state.email,\r\n            password: this.state.password,\r\n            isStylist: this.state.isStylist\r\n        };\r\n        this.props.login(userData); // since we handle the redirect within our component, we don't need to pass in this.props.history as a parameter\r\n    };\r\n\r\n    render() {\r\n        const error = this.state.error;\r\n        console.log(error.error)\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-5 col-5 mx-auto\">\r\n                        <div className=\"card card-signin flex-row my-5\">\r\n                            <div className=\"card-img-left d-none d-md-flex\">\r\n                            </div>\r\n                            <div className=\"card-body\">\r\n                                <div>\r\n                                    <p className=\"grey-text text-darken-1\">\r\n                                        Don't have an account yet?\r\n                                        <a href=\"#\" onClick={() => this.setState({modalShow: true})}> <u>Register</u> </a>Now!\r\n                                        <RegisterPopup\r\n                                            show={this.state.modalShow}\r\n                                            onHide={() => this.setState({modalShow: false})}\r\n                                        />\r\n                                    </p>\r\n                                </div>\r\n                                <h5 className=\"card-title text-center\">Login</h5>\r\n                                <form className=\"form-signin\" onSubmit={this.onSubmit}>\r\n                                    <span className=\"text-danger\">\r\n                                            {error.error}</span>\r\n                                    <div className=\"form-label-group\">\r\n                                        <input\r\n                                            onChange={this.onChange}\r\n                                            value={this.state.email}\r\n                                            id=\"email\"\r\n                                            type=\"email\"\r\n                                            className={classnames(\"form-control\", {\r\n                                                invalid: error.email || error.emailnotfound\r\n                                            })}\r\n                                        />\r\n                                        <label htmlFor=\"email\">Email</label>\r\n                                    </div>\r\n\r\n                                    <div className=\"form-label-group\">\r\n                                        <input\r\n                                            onChange={this.onChange}\r\n                                            value={this.state.password}\r\n                                            id=\"password\"\r\n                                            type=\"password\"\r\n                                            className={classnames(\"form-control\", {\r\n                                                invalid: error.password || error.passwordincorrect\r\n                                            })}\r\n                                        />\r\n                                        <label htmlFor=\"password\">Password</label>\r\n                                    </div>\r\n           <div class=\"form-check\">\r\n    <input type=\"checkbox\" class=\"form-check-input\" id=\"exampleCheck1\" checked={this.state.isStylist} onChange={this.onCheck}/>\r\n    <label class=\"form-check-label\" htmlFor=\"exampleCheck1\">If you are a stylist or barber, please click here </label>\r\n  </div>\r\n                                    <hr/>\r\n                                        <button\r\n                                    type=\"button\"\r\n                                    className=\"btn btn-lg btn-primary btn-block text-uppercase\"\r\n                                    onClick={this.onSubmit}\r\n                                >\r\n                                    Login\r\n                                </button>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nLogin.propTypes = {\r\n    login: PropTypes.func.isRequired,\r\n    auth: PropTypes.object.isRequired\r\n};\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth,\r\n    error: state.error\r\n});\r\nexport default connect(\r\n    mapStateToProps,\r\n    {login}\r\n)(Login);","import React, { Component } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { registerUser } from \"../../actions/authActions\";\r\nimport classnames from \"classnames\";\r\nimport \"./register.css\"\r\n\r\nclass RegisterUser extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            firstName: \"\",\r\n            lastName: \"\",\r\n            name: \"\",\r\n            email: \"\",\r\n            password: \"\",\r\n            password2: \"\",\r\n            error: {}\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        // If logged in and user navigates to RegisterUser page, should redirect them to dashboard\r\n    }\r\n    componentWillReceiveProps(nextProps) {\r\n        if (nextProps.error) {\r\n            this.setState({\r\n                error: nextProps.error\r\n            });\r\n        }\r\n    }\r\n    onChange = e => {\r\n        this.setState({ [e.target.id]: e.target.value });\r\n    };\r\n    onSubmit = e => {\r\n        e.preventDefault();\r\n        const newUser = {\r\n            firstName: this.state.firstName,\r\n            lastName: this.state.lastName,\r\n            name: this.state.name,\r\n            email: this.state.email,\r\n            password: this.state.password,\r\n            password2: this.state.password2\r\n        };\r\n        this.props.registerUser(newUser, this.props.history);\r\n    };\r\n    render() {\r\n        const { error } = this.state;\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-5 col-5 mx-auto\">\r\n                        <div className=\"card card-signin flex-row my-5\">\r\n                            <div className=\"card-body\">\r\n                                <h5 className=\"card-title text-center\">Register</h5>\r\n                                <form className=\"form-signin\" onSubmit={this.onSubmit}>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"form-label-group col-6\">\r\n                                            <input type=\"text\" onChange={this.onChange} error={error.firstName}\r\n                                                   value={this.state.firstName} id=\"firstName\" className={classnames(\"form-control\", {\r\n                                                invalid: error.firstName\r\n                                            })} placeholder=\"First Name\" required autoFocus />\r\n                                            <label htmlFor=\"firstName\">First Name</label>\r\n                                            <span className=\"red-text\">{error.firstName}</span>\r\n                                        </div>\r\n                                        <div className=\"form-label-group col-6\">\r\n                                            <input type=\"text\" onChange={this.onChange} error={error.lastName}\r\n                                                   value={this.state.lastName} id=\"lastName\" className={classnames(\"form-control\", {\r\n                                                invalid: error.lastName\r\n                                            })} placeholder=\"Last Name\" required autoFocus />\r\n                                            <label htmlFor=\"lastName\">Last Name</label>\r\n                                            <span className=\"red-text\">{error.lastName}</span>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"form-label-group\">\r\n                                        <input type=\"text\" onChange={this.onChange} error={error.name}\r\n                                               value={this.state.name} id=\"name\" className={classnames(\"form-control\", {\r\n                                            invalid: error.name\r\n                                        })} placeholder=\"Username\" required autoFocus />\r\n                                            <label htmlFor=\"name\">Username</label>\r\n                                            <span className=\"red-text\">{error.name}</span>\r\n                                    </div>\r\n\r\n                                    <div className=\"form-label-group\">\r\n                                        <input type=\"email\" onChange={this.onChange}\r\n                                               value={this.state.email}\r\n                                               error={error.email} id=\"email\"\r\n                                               placeholder=\"Email address\" className={classnames(\"form-control\", {\r\n                                            invalid: error.email\r\n                                        })} required />\r\n                                            <label htmlFor=\"email\">Email address</label>\r\n                                            <span className=\"red-text\">{error.email}</span>\r\n                                    </div>\r\n\r\n                                    <hr/>\r\n\r\n                                        <div className=\"form-label-group\">\r\n                                            <input type=\"password\" onChange={this.onChange}\r\n                                                   value={this.state.password}\r\n                                                   error={error.password} id=\"password\"\r\n                                                   placeholder=\"Password\" className={classnames(\"form-control\", {\r\n                                                invalid: error.password\r\n                                            })} required />\r\n                                                <label htmlFor=\"password\">Password</label>\r\n                                                <span className=\"red-text\">{error.password}</span>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-label-group\">\r\n                                            <input type=\"password\" onChange={this.onChange}\r\n                                                   value={this.state.password2}\r\n                                                   error={error.password2} id=\"password2\" placeholder=\"Password\"\r\n                                                   className={classnames(\"form-control\", {\r\n                                                       invalid: error.password2\r\n                                                   })} required />\r\n                                                <label htmlFor=\"password2\">Confirm password</label>\r\n                                                <span className=\"red-text\">{error.password2}</span>\r\n                                        </div>\r\n\r\n                                        <button className=\"btn btn-lg btn-primary btn-block text-uppercase\"\r\n                                                type=\"submit\">Register\r\n                                        </button>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nRegisterUser.propTypes = {\r\n    registerUser: PropTypes.func.isRequired,\r\n    auth: PropTypes.object.isRequired,\r\n    error: PropTypes.object.isRequired\r\n};\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth,\r\n    error: state.error\r\n});\r\nexport default connect(\r\n    mapStateToProps,\r\n    { registerUser }\r\n)(withRouter(RegisterUser));","import React, { Component } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { registerStylist } from \"../../actions/authActions\";\r\nimport classnames from \"classnames\";\r\nimport \"./register.css\"\r\n\r\nclass RegisterStylist extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            firstName: \"\",\r\n            lastName: \"\",\r\n            texasID: \"\",\r\n            email: \"\",\r\n            password: \"\",\r\n            password2: \"\",\r\n            error: \"\",\r\n            businessName: \"\",\r\n            photo: \"\",\r\n            address: \"\",\r\n        };\r\n    }\r\n    \r\n    componentDidMount() {\r\n        // If logged in and user navigates to Register page, should redirect them to dashboard\r\n    }\r\n    componentWillReceiveProps(nextProps) {\r\n        if (nextProps.error) {\r\n            this.setState({\r\n                error: nextProps.error\r\n            });\r\n        }\r\n    }\r\n    onChange = e => {\r\n        this.setState({ [e.target.id]: e.target.value });\r\n    };\r\n    onSubmit = e => {\r\n        e.preventDefault();\r\n        const newUserStylist = {\r\n            firstName: this.state.firstName,\r\n            lastName: this.state.lastName,\r\n            email: this.state.email,\r\n            password: this.state.password,\r\n            password2: this.state.password2,\r\n            texasID: this.state.texasID,\r\n            businessName: this.state.businessName,\r\n            photo: this.state.photo,\r\n            address: this.state.address,\r\n        };\r\n        this.props.registerStylist(newUserStylist, this.props.history);\r\n    };\r\n    render() {\r\n        const { error } = this.state;\r\n        return (\r\n            <div className=\"container mt-5\">\r\n                <div className=\"row\">\r\n                    <div className=\"col s8 offset-s2\">\r\n                        <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\r\n                            <h4>\r\n                                <b>Register</b> a stylist account below\r\n                            </h4>\r\n                        </div>\r\n                        <form noValidate onSubmit={this.onSubmit}>\r\n                            <div className=\"input-field col s12\">\r\n                                <input\r\n                                    onChange={this.onChange}\r\n                                    value={this.state.firstName}\r\n                                    error={error.firstName}\r\n                                    id=\"firstName\"\r\n                                    type=\"text\"\r\n                                    placeholder=\"First Name\"\r\n                                    className={classnames(\"\", {\r\n                                        invalid: error.firstName\r\n                                    })}\r\n                                />\r\n                                <label htmlFor=\"firstName\">First Name</label>\r\n                                <span className=\"red-text\">{error.firstName}</span>\r\n                            </div>\r\n                            <div className=\"input-field col s12\">\r\n                                <input\r\n                                    onChange={this.onChange}\r\n                                    value={this.state.lastName}\r\n                                    error={error.lastName}\r\n                                    id=\"lastName\"\r\n                                    type=\"text\"\r\n                                    placeholder=\"Last Name\"\r\n                                    className={classnames(\"\", {\r\n                                        invalid: error.lastName\r\n                                    })}\r\n                                />\r\n                                <label htmlFor=\"lastName\">Last Name</label>\r\n                                <span className=\"red-text\">{error.lastName}</span>\r\n                            </div>\r\n                            <div className=\"input-field col s12\">\r\n                                <input\r\n                                    onChange={this.onChange}\r\n                                    value={this.state.email}\r\n                                    error={error.email}\r\n                                    id=\"email\"\r\n                                    type=\"email\"\r\n                                    placeholder=\"something something @email.com\"\r\n                                    className={classnames(\"\", {\r\n                                        invalid: error.email\r\n                                    })}\r\n                                />\r\n                                <label htmlFor=\"email\">Email</label>\r\n                                <span className=\"red-text\">{error.email}</span>\r\n                            </div>\r\n                            <div className=\"input-field col s12\">\r\n                                <input\r\n                                    onChange={this.onChange}\r\n                                    value={this.state.password}\r\n                                    error={error.password}\r\n                                    id=\"password\"\r\n                                    type=\"password\"\r\n                                    className={classnames(\"\", {\r\n                                        invalid: error.password\r\n                                    })}\r\n                                />\r\n                                <label htmlFor=\"password\">Password</label>\r\n                                <span className=\"red-text\">{error.password}</span>\r\n                            </div>\r\n                            <div className=\"input-field col s12\">\r\n                                <input\r\n                                    onChange={this.onChange}\r\n                                    value={this.state.password2}\r\n                                    error={error.password2}\r\n                                    id=\"password2\"\r\n                                    type=\"password\"\r\n                                    className={classnames(\"\", {\r\n                                        invalid: error.password2\r\n                                    })}\r\n                                />\r\n                                <label htmlFor=\"password2\">Confirm Password</label>\r\n                                <span className=\"red-text\">{error.password2}</span>\r\n                            </div>\r\n                            <div className=\"input-field col s12\">\r\n                                <input\r\n                                    onChange={this.onChange}\r\n                                    value={this.state.texasID}\r\n                                    error={error.texasID}\r\n                                    id=\"texasID\"\r\n                                    type=\"text\"\r\n                                    placeholder=\"Enter any texas barber's licence or cosmetology license, we'll check to make sure its valid soon\"\r\n                                    className={classnames(\"\", {\r\n                                        invalid: error.texasID\r\n                                    })}\r\n                                />\r\n                                <label htmlFor=\"texasID\">Texas Cosmetology License ID Number</label>\r\n                                <span className=\"red-text\">{error.texasID}</span>\r\n                            </div>\r\n                            <div className=\"input-field col s12\">\r\n                                <input\r\n                                    onChange={this.onChange}\r\n                                    value={this.state.businessName}\r\n                                    error={error.businessName}\r\n                                    id=\"businessName\"\r\n                                    type=\"text\"\r\n                                    placeholder=\"Enter the business name on your license\"\r\n                                    className={classnames(\"\", {\r\n                                        invalid: error.businessName\r\n                                    })}\r\n                                />\r\n                                <label htmlFor=\"businessName\">Business Name</label>\r\n                                <span className=\"red-text\">{error.businessName}</span>\r\n                            </div>\r\n                            <div className=\"input-field col s12\">\r\n                                <input\r\n                                    onChange={this.onChange}\r\n                                    value={this.state.photo}\r\n                                    error={error.photo}\r\n                                    id=\"photo\"\r\n                                    type=\"text\"\r\n                                    placeholder=\"Enter the url of your photo :/\"\r\n                                    className={classnames(\"\", {\r\n                                        invalid: error.photo\r\n                                    })}\r\n                                />\r\n                                <label htmlFor=\"photo\">Photo</label>\r\n                                <span className=\"red-text\">{error.photo}</span>\r\n                            </div>\r\n                            <div className=\"input-field col s12\">\r\n                                <input\r\n                                    onChange={this.onChange}\r\n                                    value={this.state.address}\r\n                                    error={error.address}\r\n                                    id=\"address\"\r\n                                    type=\"text\"\r\n                                    placeholder=\"Enter your address or business address\"\r\n                                    className={classnames(\"\", {\r\n                                        invalid: error.address\r\n                                    })}\r\n                                />\r\n                                <label htmlFor=\"address\">Adress</label>\r\n                                <span className=\"red-text\">{error.address}</span>\r\n                            </div>\r\n                            <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\r\n                                <button\r\n                                    style={{\r\n                                        width: \"150px\",\r\n                                        borderRadius: \"3px\",\r\n                                        letterSpacing: \"1.5px\",\r\n                                        marginTop: \"1rem\"\r\n                                    }}\r\n                                    type=\"button\"\r\n                                    className=\"btn btn-large waves-effect waves-light hoverable blue accent-3\"\r\n                                    onClick={this.onSubmit}\r\n                                >\r\n                                    Sign up\r\n                                </button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nRegisterStylist.propTypes = {\r\n    registerStylist: PropTypes.func.isRequired,\r\n    auth: PropTypes.string.isRequired,\r\n    error: PropTypes.string.isRequired,\r\n};\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth,\r\n    error: state.error\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    { registerStylist }\r\n)(withRouter(RegisterStylist));","import { GET_ERRORS } from \"../actions/types\";\r\nconst initialState = {};\r\nexport default function(state = initialState, action) {\r\n    switch (action.type) {\r\n        case GET_ERRORS:\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n}","import {\r\n    SET_CURRENT_USER,\r\n    USER_LOADING\r\n} from \"../actions/types\";\r\nconst isEmpty = require(\"is-empty\");\r\nconst initialState = {\r\n    isAuthenticated: false,\r\n    user: {},\r\n    loading: false\r\n};\r\nexport default function(state = initialState, action) {\r\n    switch (action.type) {\r\n        case SET_CURRENT_USER:\r\n            return {\r\n                ...state,\r\n                isAuthenticated: !isEmpty(action.payload),\r\n                user: action.payload\r\n            };\r\n        case USER_LOADING:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from 'redux';\r\nimport errorReducer from './errorReducer';\r\nimport authReducer from './authReducer';\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    auth: authReducer,\r\n    error: errorReducer\r\n})\r\n\r\nexport default (state, action) =>\r\n    rootReducer(action.type === 'LOGOUT' ? undefined : state, action)","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\nconst initialState = {};\r\nconst middleware = [thunk];\r\nconst store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    compose(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst ServiceBox = ({imageURL, service}) => {\r\n    const searchURL = '/stylists/search/services'\r\n    return (\r\n\r\n        <div className=\"card m-3\">\r\n            <Link to={`${searchURL}/${service}`}>\r\n                <img className=\"card-img-top\" src={imageURL} alt=\"Card image cap\"/>\r\n                <div className=\"card-body\">\r\n                    <p className=\"card-text text-center border-dark\">{service}</p>\r\n                </div>\r\n            </Link>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ServiceBox;\r\n","import React, {Component} from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {logoutUser} from \"../../actions/authActions\";\r\nimport {Link} from 'react-router-dom'\r\nimport SearchBar from \"../search/searchBar\";\r\nimport ServiceBox from \"./serviceBox\";\r\n\r\nconst UserLanding = () => {\r\n    const {user} = useSelector(state => state.auth)\r\n    const services = ['Men\\'s Haircut', 'Women\\'s Haircut', 'Braids', 'Color', 'Facial', 'Nails']\r\n    const imageURLs = [\r\n        'https://images.unsplash.com/photo-1519019121902-896ed7312a9e?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1950&q=80',\r\n        'https://images.unsplash.com/flagged/photo-1575277942704-3b02a862e5f6?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1867&q=80',\r\n        'https://images.unsplash.com/photo-1582095133179-bfd08e2fc6b3?ixlib=rb-1.2.1&auto=format&fit=crop&w=1950&q=80',\r\n        'https://images.unsplash.com/photo-1492106087820-71f1a00d2b11?ixlib=rb-1.2.1&auto=format&fit=crop&w=934&q=80',\r\n        'https://images.unsplash.com/photo-1531299244174-d247dd4e5a66?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1270&q=80',\r\n        'https://images.unsplash.com/photo-1599206676335-193c82b13c9e?ixlib=rb-1.2.1&auto=format&fit=crop&w=1251&q=80'\r\n    ]\r\n    return (\r\n        <div className=\"justify-content-center align-items-center h-100\">\r\n            <div className=\"row\">\r\n                <div className=\"col-6 mx-auto  align-self-center text-center\">\r\n                    <h1 className=\"display-1\"><b>Hello</b>, {user.firstName}</h1>\r\n                    <p>You have 0 appointments</p>\r\n                </div>\r\n            </div>\r\n            <div className=\"row justify-content-center align-items-start h-100\">\r\n                <div className=\"card-deck col-11\">\r\n                    {services.map((service, index) => <ServiceBox\r\n                        key={index}\r\n                        imageURL={imageURLs[index]}\r\n                        service={service}\r\n                    />)}\r\n                </div>\r\n\r\n\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default UserLanding;\r\n","import React from 'react';\r\nimport './rating.css'\r\n\r\nconst Rating = ({rating}) => {\r\n    return (\r\n        <span className=\"stars\">\r\n                {\r\n                    [1,2,3,4,5].map(x => (\r\n                        <i key={x} className={(x > rating ? 'empty-star' : 'full-star')}/>\r\n                    ))\r\n                }\r\n        </span>\r\n    );\r\n};\r\n\r\nexport default Rating;\r\n","import React from 'react';\r\nimport Rating from \"../rating/rating\";\r\nimport {CustomPlaceholder} from \"react-placeholder-image\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\n// Information span for each stylist\r\nconst StylistInfo = ({stylist}) => {\r\n\r\n    return (\r\n        <div className=\"container-fluid w-75 my-2\">\r\n            <Link to={`/stylist/stylistId=${stylist._id}`} style={{textDecoration: 'none'}}>\r\n                <hr/>\r\n                <div className=\"row\">\r\n                    <div className=\"col-4\">\r\n                        {\r\n                            stylist.photo === 'no-photo.jpg' ?\r\n                                <CustomPlaceholder\r\n                                    width=\"200\"\r\n                                    height=\"200\"\r\n                                    backgroundColor=\"#123456\"\r\n                                    textColor=\"#ffffff\"\r\n                                    text={`Stylist ${stylist.firstName}`}\r\n                                /> :\r\n                                <img src={stylist.photo} className=\"stylistImage\" alt=\"Stylist\"/>\r\n                        }\r\n\r\n                    </div>\r\n                    <div className=\"col-8\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-8\">\r\n                                <h4>{stylist.firstName} {stylist.lastName}</h4>\r\n                                <p className=\"text-muted\">{stylist.businessName}</p>\r\n                            </div>\r\n                            <div className=\"col-4\">\r\n                                <Rating rating={stylist.average}/>\r\n                                <p className=\"text-muted d-inline ml-1\">({stylist.reviews.length})</p>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <button className=\"btn btn-warning align-self-end\">Book an appointment</button>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                </div>\r\n                <hr/>\r\n            </Link>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default StylistInfo;\r\n","import React from 'react';\r\nimport ReactLoading from 'react-loading'\r\n\r\nconst Loading = () => {\r\n    return (\r\n        <div className=\"h-100 row justify-content-center align-items-center\">\r\n            <ReactLoading type=\"cubes\" color=\"#000\" height=\"4rem\" width=\"4rem\" />\r\n        </div>\r\n\r\n\r\n    );\r\n};\r\n\r\nexport default Loading;\r\n","import React from 'react';\r\nimport Rating from \"./rating\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst RatingFilter = ({types, queries}) => {\r\n    const ratings = [5,4,3,2,1]\r\n    const searchURL = \"/stylists/search\"\r\n    return (\r\n        <div>\r\n            <ul style={{listStyleType: \"none\"}}>\r\n                {ratings.map((rating, index) => (\r\n                    <li key={index}>\r\n                        <Link to={`${searchURL}/${types}&min/${queries}&${rating}`} style={{textDecoration: 'none'}}>\r\n                            <Rating rating={rating} /> & Up\r\n                        </Link>\r\n\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default RatingFilter;\r\n","import React from 'react';\r\nimport RatingFilter from \"../rating/ratingFilter\";\r\n\r\nconst SearchFilter = ({types, queries}) => {\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            <div>\r\n                <h6 className=\"text-center\">Avg. Customer Review</h6>\r\n                <RatingFilter types={types} queries={queries}/>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SearchFilter;\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport ReactGoogleMapLoader from 'react-google-maps-loader';\r\nimport GoogleMapReact from 'google-map-react';\r\nimport { Icon } from '@iconify/react';\r\nimport locationIcon from '@iconify/icons-mdi/map-marker';\r\nimport './map.css';\r\nimport { BrowserRouter as Router, Link } from 'react-router-dom';\r\n\r\nconst YOUR_API_KEY = 'AIzaSyCHjOs8sCJfI1C0HnzD5C1BahEx_XRQJvw';\r\n\r\nconst useIsMount = () => {\r\n    const isMountRef = useRef(true);\r\n    useEffect(() => {\r\n        isMountRef.current = false;\r\n    }, []);\r\n    return isMountRef.current;\r\n};\r\n\r\nexport const LocationPin = ({\r\n    stylist,\r\n    lng,\r\n    lat,\r\n    onClickLocation,\r\n    clicked,\r\n}) => (\r\n    <div onClick={e => onClickLocation({ lat, lng })} className='pin'>\r\n        <Icon icon={locationIcon} className='pin-icon' />\r\n        <div className={`pin-text ${clicked ? 'bg-white p-3' : null}`}>\r\n            <p className='h6'>{stylist.firstName + ' ' + stylist.lastName}</p>\r\n            {clicked && <hr />}\r\n            <p className='h6'>{stylist.businessName}</p>\r\n            {clicked && <small>{stylist.number}</small>}\r\n            {clicked && <small>{stylist.email}</small>}\r\n            {clicked && <hr />}\r\n            {clicked ? (\r\n                <>\r\n                    <p className='h6'>Services</p>\r\n                    <hr />\r\n                    <ul>\r\n                        {stylist.services.map((service, i) => {\r\n                            return <li key={i}>{service}</li>;\r\n                        })}\r\n                    </ul>\r\n                    <hr />\r\n                    <Link\r\n                        to={`/stylist/stylistId=${stylist._id.toString()}`}\r\n                        className='btn btn-block btn-primary'\r\n                    >\r\n                        More info\r\n                    </Link>\r\n                </>\r\n            ) : null}\r\n        </div>\r\n    </div>\r\n);\r\n\r\nexport const Map = ({ location, stylists }) => {\r\n    const [center, setCenter] = useState([]);\r\n    const [zoom, setZoom] = useState(10);\r\n    const [target, setTarget] = useState({});\r\n\r\n    const handleClick = (location, stylist) => {\r\n        console.log(location);\r\n        setCenter([location.lat, location.lng]);\r\n        setTarget(stylist);\r\n    };\r\n\r\n    const isMount = useIsMount();\r\n\r\n    return (\r\n        <div className='map'>\r\n            <div className='google-map'>\r\n                <GoogleMapReact\r\n                    bootstrapURLKeys={{ key: YOUR_API_KEY }}\r\n                    center={center.length > 0 ? center : location}\r\n                    defaultZoom={5}\r\n                    zoom={zoom}\r\n                    onDrag={e => setTarget({})}\r\n                >\r\n                    {stylists.map((stylist, i) => {\r\n                        return (\r\n                            stylist.location && (\r\n                                <LocationPin\r\n                                    key={i}\r\n                                    lat={stylist.location.coordinates[1]}\r\n                                    lng={stylist.location.coordinates[0]}\r\n                                    stylist={stylist}\r\n                                    clicked={\r\n                                        target && target._id == stylist._id\r\n                                    }\r\n                                    onClickLocation={location =>\r\n                                        handleClick(location, stylist)\r\n                                    }\r\n                                />\r\n                            )\r\n                        );\r\n                    })}\r\n                </GoogleMapReact>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport StylistInfo from './stylistInfo';\r\nimport Loading from '../loading';\r\nimport SearchFilter from './searchFilter';\r\nimport { Map } from './map';\r\n\r\nconst StylistsList = () => {\r\n    const URL = 'http://localhost:8000/api/stylists/search';\r\n    const [stylists, setStylists] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n\r\n    const query = useParams();\r\n    const types = query.types.split('&');\r\n    const queries = query.queries.split('&');\r\n    let params = {};\r\n    types.forEach((key, index) => (params[key] = queries[index]));\r\n\r\n    useEffect(() => {\r\n        const getStylists = async () => {\r\n            await axios\r\n                .get(URL, {\r\n                    params: params,\r\n                })\r\n                .then(res => {\r\n                    setStylists(res.data.stylists);\r\n                    setIsLoading(false);\r\n                    console.log('Stylists data fetched');\r\n                })\r\n                .catch(err => console.log(err));\r\n        };\r\n        getStylists();\r\n    }, []);\r\n\r\n    return (\r\n        <div className='h-100 align-items-center m-0 overflow-hidden'>\r\n            {isLoading ? (\r\n                <Loading />\r\n            ) : stylists.length === 0 ? (\r\n                <h1 className='text-center align-self-center'>\r\n                    No Stylists Available\r\n                </h1>\r\n            ) : (\r\n                <div className='row'>\r\n                    <div className='col-2'>\r\n                        <SearchFilter\r\n                            types={query.types}\r\n                            queries={query.queries}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className='p-0 border-left col-7'>\r\n                        <ul className='p-0 m-0'>\r\n                            {stylists.map((stylist, index) => (\r\n                                <StylistInfo key={index} stylist={stylist} />\r\n                            ))}\r\n                        </ul>\r\n                    </div>\r\n\r\n                    <div className='col-3 p-2'>\r\n                        {stylists.length > 0 && (\r\n                            <Map\r\n                                stylists={stylists.filter(\r\n                                    stylist => stylist.location\r\n                                )}\r\n                                location={{\r\n                                    lat: 39.8283,\r\n                                    lng: -98.5795,\r\n                                }}\r\n                            />\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default StylistsList;\r\n","import React, { useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { useStore } from 'react-redux';\r\n\r\nconst ChangePassword = () => {\r\n    const store = useStore();\r\n    const userType = store.getState().auth;\r\n    let { id } = useParams();\r\n    const [newPassword, setNewPassword] = useState('');\r\n    const URL = 'http://localhost:8000/api/users/resetPassword/';\r\n    const onSend = async event => {\r\n        event.preventDefault();\r\n        await axios\r\n            .put(URL + { id }.id, {\r\n                password: newPassword,\r\n            })\r\n            .then(res => console.log(res))\r\n            .catch(err => console.log(err));\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <div className='container mt-5'>\r\n                <div className='row align-items-center h-100'>\r\n                    <div className='col-6 mx-auto'>\r\n                        <form onSubmit={onSend}>\r\n                            <div className='form-group'>\r\n                                <label htmlFor='email'>\r\n                                    Enter your new password\r\n                                </label>\r\n                                <input\r\n                                    type='password'\r\n                                    id='password'\r\n                                    value={newPassword}\r\n                                    onChange={event =>\r\n                                        setNewPassword(event.target.value)\r\n                                    }\r\n                                    className='form-control'\r\n                                />\r\n                            </div>\r\n                            <button type='submit' className='btn btn-primary'>\r\n                                Reset\r\n                            </button>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ChangePassword;\r\n","import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport Rating from '../rating/rating';\r\n\r\nconst ReviewBox = props => {\r\n    return (\r\n        <div className='ReviewBox p-1'>\r\n            <div className='ReviewBox-Average text-center m-2 card'>\r\n                <h3 className='display-4'>{props.stylist}'s Average Rating:</h3>\r\n                <h3>\r\n                    <Rating rating={props.average} />\r\n                </h3>\r\n            </div>\r\n            <div className='ReviewBox-Reviews'>\r\n                <header className='display-3 text-center'>Reviews</header>\r\n                {props.reviews.map((review, index) => (\r\n                    <div className='Review-Card card my-2 p-2' key={index}>\r\n                        <h6 className='display-4 m-1' key={review._id}>\r\n                            {review.reviewerName}{' '}\r\n                        </h6>\r\n                        <h1>\r\n                            <Rating rating={review.score} />\r\n                        </h1>\r\n                        <p>{review.notes}</p>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ReviewBox;\r\n","import React from 'react';\r\n\r\nconst Services = ({ services }) => {\r\n    return (\r\n        <div className='Services text-center'>\r\n            <h5 className='card-title display-4'> Services </h5>\r\n            <div className='card'>\r\n                {services.map((service, i) => (\r\n                    <div className='m-3' key={i}>\r\n                        <div className='h3'>{service.toUpperCase()}</div>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Services;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport Loading from '../loading';\r\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\r\nimport 'react-tabs/style/react-tabs.css';\r\nimport { CustomPlaceholder } from 'react-placeholder-image';\r\nimport ReviewBox from './reviewBox';\r\nimport Services from './services';\r\n\r\nconst StylistProfile = () => {\r\n    const [stylist, setStylist] = useState({});\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const stylistId = useParams();\r\n    const URL = 'http://localhost:8000/api/stylists/';\r\n\r\n    useEffect(() => {\r\n        const fetchStylist = async () => {\r\n            await axios.get(URL + stylistId.id).then(res => {\r\n                const stylistData = res.data.stylist;\r\n                console.log(stylistData);\r\n                setStylist(stylistData);\r\n                setIsLoading(false);\r\n            });\r\n        };\r\n        fetchStylist();\r\n    }, []);\r\n\r\n    return (\r\n        <div className='h-100'>\r\n            {isLoading ? (\r\n                <Loading />\r\n            ) : (\r\n                <div className='container'>\r\n                    <div className='card card-signin flex-row my-5'>\r\n                        <div className='card-body'>\r\n                            <div className='row mb-4'>\r\n                                <div className='col-3 mt-4'>\r\n                                    {stylist.photo === 'no-photo.jpg' ? (\r\n                                        <CustomPlaceholder\r\n                                            width='200'\r\n                                            height='200'\r\n                                            backgroundColor='#123456'\r\n                                            textColor='#ffffff'\r\n                                            text={`Stylist ${stylist.firstName}`}\r\n                                        />\r\n                                    ) : (\r\n                                        <img\r\n                                            src={stylist.photo}\r\n                                            className='w-100 h-100'\r\n                                            alt='Stylist'\r\n                                        />\r\n                                    )}\r\n                                </div>\r\n                                <div className='col-9'>\r\n                                    <h2 className='text-center display-4 mb-4'>{`${stylist.firstName} ${stylist.lastName}`}</h2>\r\n                                    <h5>Contact Information</h5>\r\n                                    <ul className='list-group list-group-flush'>\r\n                                        <li className='list-group-item'>\r\n                                            Phone Number:{' '}\r\n                                            {stylist.number === ''\r\n                                                ? 'None'\r\n                                                : stylist.number}\r\n                                        </li>\r\n                                        <li className='list-group-item'>\r\n                                            Email:{' '}\r\n                                            {stylist.email === ''\r\n                                                ? 'None'\r\n                                                : stylist.email}\r\n                                        </li>\r\n                                        <li className='list-group-item'>\r\n                                            Address:{' '}\r\n                                            {stylist.address === ''\r\n                                                ? 'None'\r\n                                                : stylist.address}\r\n                                        </li>\r\n                                    </ul>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <Tabs>\r\n                                <TabList>\r\n                                    <Tab>Services</Tab>\r\n                                    <Tab>Reviews</Tab>\r\n                                </TabList>\r\n\r\n                                <TabPanel>\r\n                                    <Services services={stylist.services} />\r\n                                </TabPanel>\r\n                                <TabPanel>\r\n                                    <ReviewBox\r\n                                        stylist={stylist.firstName}\r\n                                        average={stylist.average}\r\n                                        reviews={stylist.reviews}\r\n                                    />\r\n                                </TabPanel>\r\n                            </Tabs>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default StylistProfile;\r\n","import React, {useState} from 'react';\r\nimport {Link} from \"react-router-dom\";\r\nimport store from \"../../store\";\r\n\r\nconst EditProfile = () => {\r\n    const [name, setName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n\r\n    let currentState = store.getState()\r\n    console.log(currentState.auth.user)\r\n\r\n    // Save the profile\r\n    const onSubmit = () => {\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-lg-10 col-xl-9 mx-auto\">\r\n                    <div className=\"card card-signin flex-row my-5\">\r\n                        <div className=\"card-body\">\r\n                            <h5 className=\"card-title text-center\">Edit Profile</h5>\r\n                            <form className=\"form-signin\" onSubmit={onSubmit}>\r\n                                <div className=\"form-label-group\">\r\n                                    <input type=\"text\" onChange={event => setName(event.target.value)}\r\n                                           value={name} className=\"form-control\" id=\"name\" placeholder=\"Username\" required autoFocus />\r\n                                    <label htmlFor=\"name\">Enter New Username</label>\r\n                                </div>\r\n\r\n                                <div className=\"form-label-group\">\r\n                                    <input type=\"email\" onChange={event => setEmail(event.target.value)}\r\n                                           className=\"form-control\"\r\n                                           value={email}\r\n                                           id=\"inputEmail\"\r\n                                           placeholder=\"Email address\" required />\r\n                                    <label htmlFor=\"inputEmail\">Enter New Email Address</label>\r\n                                </div>\r\n\r\n                                <hr/>\r\n\r\n                                <Link className=\"btn btn-secondary mr-2\" to=\"/userLanding\">Cancel</Link>\r\n                                <button className=\"btn btn-primary mr-2\"\r\n                                        type=\"submit\">Save\r\n                                </button>\r\n                                <Link to=\"/resetPassword\" className=\"btn btn-danger\">\r\n                                    Change Password\r\n                                </Link>\r\n\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default EditProfile;\r\n","import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst SendPassword = () => {\r\n    const url = 'http://localhost:8000/api/users/forgotPassword';\r\n    const [email, setEmail] = useState('');\r\n\r\n    const onSend = async event => {\r\n        event.preventDefault();\r\n        await axios\r\n            .post(url, {\r\n                email: email,\r\n            })\r\n            .then(res => alert('Reset password link sent successfully!'))\r\n            .catch(err => {\r\n                alert('Failed to send the link. Please try again!');\r\n                console.log(err);\r\n            });\r\n        setEmail('');\r\n    };\r\n\r\n    return (\r\n        <div className='container mt-5'>\r\n            <div className='row align-items-center h-100'>\r\n                <div className='col-6 mx-auto'>\r\n                    <form onSubmit={onSend}>\r\n                        <div className='form-group'>\r\n                            <label htmlFor='email'>\r\n                                Enter your email below\r\n                            </label>\r\n                            <input\r\n                                type='email'\r\n                                id='email'\r\n                                value={email}\r\n                                onChange={event => setEmail(event.target.value)}\r\n                                className='form-control'\r\n                            />\r\n                        </div>\r\n                        <button type='submit' className='btn btn-primary'>\r\n                            Send reset link\r\n                        </button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SendPassword;\r\n","import * as React from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { ViewState, EditingState } from '@devexpress/dx-react-scheduler';\r\nimport {\r\n    Scheduler,\r\n    DayView,\r\n    WeekView,\r\n    Appointments,\r\n    Toolbar,\r\n    ViewSwitcher,\r\n    MonthView,\r\n    AppointmentForm,\r\n    AppointmentTooltip,\r\n    EditRecurrenceMenu,\r\n    AllDayPanel,\r\n    ConfirmationDialog,\r\n} from '@devexpress/dx-react-scheduler-material-ui';\r\nimport { useParams } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nexport default class StylistCalendar extends React.PureComponent {\r\n    state = {\r\n        data: [],\r\n        stylist: {},\r\n        currentDate: new Date().toLocaleString(),\r\n        URL: `http://localhost:8000/api`,\r\n        stylistId: this.props.match.params.id,\r\n        addedAppointment: {},\r\n        appointmentChanges: {},\r\n        editingAppointment: undefined,\r\n    };\r\n    constructor(props) {\r\n        super(props);\r\n        this.commitChanges = this.commitChanges.bind(this);\r\n        this.changeAddedAppointment = this.changeAddedAppointment.bind(this);\r\n        this.changeAppointmentChanges = this.changeAppointmentChanges.bind(\r\n            this\r\n        );\r\n        this.changeEditingAppointment = this.changeEditingAppointment.bind(\r\n            this\r\n        );\r\n    }\r\n\r\n    getStylistByID = id => {\r\n        return new Promise((resolve, reject) => {\r\n            axios\r\n                .get(`http://localhost:8000/api/stylists/${id}`)\r\n                .then(x => resolve(x.data.stylist))\r\n                .catch(e => {\r\n                    alert(e);\r\n                    reject();\r\n                });\r\n        });\r\n    };\r\n\r\n    changeAddedAppointment(addedAppointment) {\r\n        this.setState({ addedAppointment });\r\n    }\r\n\r\n    changeAppointmentChanges(appointmentChanges) {\r\n        this.setState({ appointmentChanges });\r\n    }\r\n\r\n    changeEditingAppointment(editingAppointment) {\r\n        this.setState({ editingAppointment });\r\n    }\r\n\r\n    commitChanges({ added, changed, deleted }) {\r\n        this.setState(state => {\r\n            let { data } = state;\r\n            if (added) {\r\n                const startingAddedId =\r\n                    data.length > 0 ? data[data.length - 1].id + 1 : 0;\r\n                data = [...data, { id: startingAddedId, ...added }];\r\n            }\r\n            if (changed) {\r\n                data = data.map(appointment =>\r\n                    changed[appointment.id]\r\n                        ? { ...appointment, ...changed[appointment.id] }\r\n                        : appointment\r\n                );\r\n            }\r\n            if (deleted !== undefined) {\r\n                data = data.filter(appointment => appointment.id !== deleted);\r\n            }\r\n            return { data };\r\n        });\r\n    }\r\n    render() {\r\n        const {\r\n            currentDate,\r\n            data,\r\n            addedAppointment,\r\n            appointmentChanges,\r\n            editingAppointment,\r\n        } = this.state;\r\n        return (\r\n            <div className='container'>\r\n                <Paper>\r\n                    <Scheduler data={data} height={660}>\r\n                        <ViewState\r\n                            defaultCurrentDate={currentDate}\r\n                            defaultCurrentViewName='Week'\r\n                        />\r\n                        <EditingState\r\n                            onCommitChanges={this.commitChanges}\r\n                            addedAppointment={addedAppointment}\r\n                            onAddedAppointmentChange={\r\n                                this.changeAddedAppointment\r\n                            }\r\n                            appointmentChanges={appointmentChanges}\r\n                            onAppointmentChangesChange={\r\n                                this.changeAppointmentChanges\r\n                            }\r\n                            editingAppointment={editingAppointment}\r\n                            onEditingAppointmentChange={\r\n                                this.changeEditingAppointment\r\n                            }\r\n                        />\r\n                        <DayView startDayHour={9} endDayHour={18} />\r\n                        <WeekView startDayHour={10} endDayHour={19} />\r\n                        <MonthView startDayHour={10} endDayHour={19} />\r\n                        <AllDayPanel />\r\n                        <EditRecurrenceMenu />\r\n                        <ConfirmationDialog />\r\n                        <Appointments />\r\n                        <AppointmentTooltip showOpenButton showDeleteButton />\r\n                        <AppointmentForm />\r\n                    </Scheduler>\r\n                </Paper>\r\n            </div>\r\n        );\r\n    }\r\n    componentDidMount() {\r\n        this.getStylistByID(this.state.stylistId).then(stylist =>\r\n            this.setState({ stylist }, () => {\r\n                this.setState({ data: stylist.appointments });\r\n            })\r\n        );\r\n    }\r\n}\r\n","import React, {useEffect, useState} from 'react';\r\n\r\nexport const useInput = initialValue => {\r\n    const [value, setValue] = useState(initialValue);\r\n  \r\n    return {\r\n      value,\r\n      setValue,\r\n      reset: () => setValue(\"\"),\r\n      bind: {\r\n        value,\r\n        onChange: event => {\r\n          setValue(event.target.value);\r\n        }\r\n      }\r\n    };\r\n  };","import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport 'react-tabs/style/react-tabs.css';\r\nimport { useInput } from '../hooks/InputHook';\r\n\r\n// Register User\r\n// import { MenuItem } from '../temporaryObjects/restaurantModel';\r\nexport const AddServices = () => {\r\n    const [stylist, setStylist] = useState({});\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const stylistId = useParams();\r\n    const URL = `http://localhost:8000/api`;\r\n    const { value: name, bind: bindName, reset: resetName } = useInput('');\r\n    const {\r\n        value: description,\r\n        bind: bindDescription,\r\n        reset: resetDescription,\r\n    } = useInput('');\r\n    const { value: price, bind: bindPrice, reset: resetPrice } = useInput(0);\r\n    const {\r\n        value: category,\r\n        bind: bindCateogry,\r\n        reset: resetCategory,\r\n    } = useInput('');\r\n\r\n    const onSend = () => {\r\n        const service = {\r\n            name: name,\r\n            description: description,\r\n            price: price,\r\n            category: category,\r\n        };\r\n        const callAxios = async () => {\r\n            await axios\r\n                .post(`/stylists/services/${stylistId.id}/add`, service)\r\n                .then(res => {\r\n                    setStylist(res.data.stylist);\r\n                })\r\n                .catch(err =>\r\n                    //   dispatch({\r\n                    //     type: GET_ERRORS,\r\n                    //     payload: err.response.data\r\n                    // })\r\n                    console.log('Error upon errors')\r\n                );\r\n        };\r\n        resetName();\r\n        resetDescription();\r\n        resetPrice();\r\n        resetCategory();\r\n        callAxios();\r\n    };\r\n\r\n    useEffect(() => {\r\n        const fetchStylist = async () => {\r\n            console.log(stylist);\r\n            await axios.get(`${URL}/stylists/${stylistId.id}`).then(res => {\r\n                const stylistData = res.data.stylist;\r\n                console.log(stylistData);\r\n                setStylist(stylistData);\r\n                setIsLoading(false);\r\n            });\r\n        };\r\n        fetchStylist();\r\n    }, [stylist]);\r\n    /*\r\nonChange={event => setNewService(event.target.value)}\r\n*/\r\n\r\n    return (\r\n        <>\r\n            <form\r\n                className='container bg-green text-success border border-primary'\r\n                style={{ width: '50%', height: '50%' }}\r\n            >\r\n                <h3 className='action'>\r\n                    Add Service Offered Just a reminder you need to add image\r\n                    support\r\n                </h3>\r\n                <div class='form-row'>\r\n                    <div className='form-group col-md-6'>\r\n                        <label htmlFor='name'>Service Name</label>\r\n                        <input type='text' {...bindName} />\r\n                    </div>\r\n                    <div className='form-group col-md-6'>\r\n                        <label htmlFor='ItemPrice'>Price $:</label>\r\n                        <input type='number' {...bindPrice} />\r\n                    </div>\r\n                </div>\r\n                <div className='form-group'>\r\n                    <label htmlFor='description'>Item Description</label>\r\n                    <textarea\r\n                        type='text'\r\n                        id='email'\r\n                        name='email'\r\n                        className='form-control'\r\n                        value={description}\r\n                        bind={bindDescription}\r\n                    />\r\n                </div>\r\n\r\n                <div class='form-row'>\r\n                    <div className='form-group col'>\r\n                        <label htmlFor='category'>\r\n                            Category (soon will be a list of eli's enumerated\r\n                            services\r\n                        </label>\r\n                        <span>\r\n                            <input type='text' {...bindCateogry} />\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n\r\n                <input\r\n                    className='bg-primary'\r\n                    type='button'\r\n                    value='Submit'\r\n                    onClick={() => onSend()}\r\n                    text='helloworldAddServices'\r\n                />\r\n            </form>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default AddServices;\r\n\r\n{\r\n    /* <form>\r\n  <div class=\"form-row\">\r\n    <div class=\"form-group col-md-6\">\r\n      <label for=\"inputEmail4\">Email</label>\r\n      <input type=\"email\" class=\"form-control\" id=\"inputEmail4\" placeholder=\"Email\">\r\n    </div>\r\n    <div class=\"form-group col-md-6\">\r\n      <label for=\"inputPassword4\">Password</label>\r\n      <input type=\"password\" class=\"form-control\" id=\"inputPassword4\" placeholder=\"Password\">\r\n    </div>\r\n  </div>\r\n  <div class=\"form-group\">\r\n    <label for=\"inputAddress\">Address</label>\r\n    <input type=\"text\" class=\"form-control\" id=\"inputAddress\" placeholder=\"1234 Main St\">\r\n  </div>\r\n  <div class=\"form-group\">\r\n    <label for=\"inputAddress2\">Address 2</label>\r\n    <input type=\"text\" class=\"form-control\" id=\"inputAddress2\" placeholder=\"Apartment, studio, or floor\">\r\n  </div>\r\n  <div class=\"form-row\">\r\n    <div class=\"form-group col-md-6\">\r\n      <label for=\"inputCity\">City</label>\r\n      <input type=\"text\" class=\"form-control\" id=\"inputCity\">\r\n    </div>\r\n    <div class=\"form-group col-md-4\">\r\n      <label for=\"inputState\">State</label>\r\n      <select id=\"inputState\" class=\"form-control\">\r\n        <option selected>Choose...</option>\r\n        <option>...</option>\r\n      </select>\r\n    </div>\r\n    <div class=\"form-group col-md-2\">\r\n      <label for=\"inputZip\">Zip</label>\r\n      <input type=\"text\" class=\"form-control\" id=\"inputZip\">\r\n    </div>\r\n  </div>\r\n  <div class=\"form-group\">\r\n    <div class=\"form-check\">\r\n      <input class=\"form-check-input\" type=\"checkbox\" id=\"gridCheck\">\r\n      <label class=\"form-check-label\" for=\"gridCheck\">\r\n        Check me out\r\n      </label>\r\n    </div>\r\n  </div>\r\n  <button type=\"submit\" class=\"btn btn-primary\">Sign in</button>\r\n</form> */\r\n}\r\n","import React, {Component} from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {logoutUser} from \"../actions/authActions\";\r\nimport {Link} from 'react-router-dom'\r\nimport  * as StylistCalendar from \"./stylist/stylistCalendar\";\r\nimport AddServices from \"./stylist/addServices\";\r\nconst appointmentsOrAdd = ({stylist}) => {\r\n    if (stylist.appointments === undefined){\r\n            return (\r\n                <div>\r\n            You have no appointments and we will make functionality soon undefined option</div>);\r\n    }\r\n    if (stylist.services === undefined) {\r\n        return (<div>\r\n            You need to add services that you offer before you are able to have customers book appointments with\r\n        <AddServices stylist={stylist}/>\r\n        </div>\r\n        );\r\n       } \r\n    if ((stylist.appointments != undefined)){\r\n        return (<StylistCalendar/>);\r\n    }\r\n}\r\nconst StylistLanding = () => {\r\n    const {user} = useSelector(state => state.auth);\r\n    return (\r\n        <div className=\"container justify-content-center align-items-center h-100\" style={{marginTop: \"3%\"}}>\r\n            <div className=\"row\">\r\n                {/* <div className=\"col-6 mx-auto  align-self-center text-center\">\r\n                    <h1><b>Hello</b>, {user.firstName}</h1>\r\n                </div> */}\r\n<div className=\"justify-content-center container valign-wrapper\">\r\n<h1> Hello {`${user.firstName}  ${user.lastName}`} welcome to Ultimate Style!\r\n            </h1>\r\n                <img src={user.photo}/>\r\n                <div className=\"container\">\r\n\r\n                </div>\r\n              {appointmentsOrAdd({stylist: user})}\r\n            <div>\r\n            {/* <Container fluid=\"sm\">\r\n                        <Row>\r\n                        <Col><LoginCard accountType={userTypes.Customer}/></Col>\r\n                        <Col><Services accountType={userTypes.RestaurantEmployee}/></Col>\r\n                        </Row>\r\n                        <Row>\r\n                        <Col><LoginCard accountType={userTypes.Delivery}/></Col>\r\n                        <Col><LoginCard accountType={userTypes.WebManager}/></Col>\r\n                        </Row>\r\n            </Container> */}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                \r\n    <div className=\"row\">\r\n        <div className=\"col center-align\">\r\n                <Link\r\n                    to={`/stylists/stylistCalendar/stylistId=${user.id}`}\r\n                    style={{\r\n                        width: \"140px\",\r\n                        borderRadius: \"3px\",\r\n                        letterSpacing: \"1.5px\",\r\n                        padding: \"12px\"\r\n                    }}\r\n                    className=\"btn btn-large btn-flat waves-effect blue black-text\"\r\n                >Calendar</Link>\r\n                <Link\r\n                    to=\"/\"\r\n                    style={{\r\n                        width: \"140px\",\r\n                        borderRadius: \"3px\",\r\n                        letterSpacing: \"1.5px\",\r\n                        padding: \"12px\"\r\n                    }}\r\n                    className=\"btn btn-large btn-flat waves-effect blue black-text\"\r\n                >Back to home</Link>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default StylistLanding;\r\n\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useParams } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport Loading from '../loading';\r\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\r\nimport 'react-tabs/style/react-tabs.css';\r\nimport { CustomPlaceholder } from 'react-placeholder-image';\r\nimport ReviewBox from '../profile/reviewBox';\r\nimport Rating from '../rating/rating';\r\nconst ServicesList = props => {\r\n    const [stylist, setStylist] = useState({});\r\n    const stylistId = useParams();\r\n    const URL = 'http://localhost:8000/api';\r\n    const services = stylist.services;\r\n    console.log('Services: ', services);\r\n    useEffect(() => {\r\n        const fetchStylist = async () => {\r\n            await axios.get(`${URL}/stylists/${stylistId.id}`).then(res => {\r\n                const stylistData = res.data.stylist;\r\n                console.log(stylistData);\r\n                setStylist(stylistData);\r\n            });\r\n        };\r\n        fetchStylist();\r\n    }, [stylist]);\r\n    if (stylist && services && services.length > 0) {\r\n        return (\r\n            <div className='Services text-center'>\r\n                <h5 className='card-title display-4'> Services </h5>\r\n                <div className='card'>\r\n                    {services.map((service, i) => (\r\n                        <div className='m-3' key={i}>\r\n                            <div className='h3'>Service {i}</div>\r\n                            <p> {service.name}</p>\r\n                            <p> {service.description}</p>\r\n                            <p> {service.cateogry}</p>\r\n                            <p> {service.price}</p>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        );\r\n    } else {\r\n        return (\r\n            <div>\r\n                there are no services available currently. Please add one Below!\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default ServicesList;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useParams } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport Loading from '../loading';\r\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\r\nimport 'react-tabs/style/react-tabs.css';\r\nimport { CustomPlaceholder } from 'react-placeholder-image';\r\nimport ReviewBox from '../profile/reviewBox';\r\nimport Rating from '../rating/rating';\r\nimport ServicesList from './servicesList';\r\nimport { AddServices } from './addServices';\r\nconst ServicesOffered = () => {\r\n    const [stylist, setStylist] = useState({});\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const stylistId = useParams();\r\n    const URL = 'http://localhost:8000/api';\r\n\r\n    useEffect(() => {\r\n        const fetchStylist = async () => {\r\n            await axios.get(`${URL}/stylists/${stylistId.id}`).then(res => {\r\n                const stylistData = res.data.stylist;\r\n                setStylist(stylistData);\r\n                setIsLoading(false);\r\n            });\r\n        };\r\n        fetchStylist();\r\n    }, [stylist]);\r\n    return (\r\n        <div className='container-fluid w-75 my-2'>\r\n            <Link to={`/stylists/stylistLanding/stylistId=${stylistId.id}`}>\r\n                Back To Your Home Page\r\n            </Link>\r\n            <ServicesList id={stylist.id} />\r\n            <AddServices id={stylist.id} />\r\n        </div>\r\n    );\r\n};\r\nexport default ServicesOffered;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport Loading from '../loading';\r\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\r\nimport 'react-tabs/style/react-tabs.css';\r\nimport { CustomPlaceholder } from 'react-placeholder-image';\r\nimport ReviewBox from './reviewBox';\r\nimport { useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst UserProfile = () => {\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const token = localStorage.jwtToken;\r\n    // const {user} = useSelector(state => state.auth)\r\n    // console.log(user)\r\n    const [user, setUser] = useState({});\r\n\r\n    useEffect(() => {\r\n        const fetchUser = async () => {\r\n            await axios\r\n                .get('http://localhost:8000/api/users/me', {\r\n                    headers: {\r\n                        Authorization: 'Bearer ' + token,\r\n                    },\r\n                })\r\n                .then(res => {\r\n                    setUser(res.data.user);\r\n                    setIsLoading(false);\r\n                })\r\n                .catch(err => console.log(err));\r\n        };\r\n        fetchUser();\r\n    }, []);\r\n\r\n    return (\r\n        <div className='h-100'>\r\n            {isLoading ? (\r\n                <Loading />\r\n            ) : (\r\n                <div className='container'>\r\n                    <div className='card card-signin flex-row my-5'>\r\n                        <div className='card-body'>\r\n                            <div className='row mb-4'>\r\n                                <div className='col-10'>\r\n                                    <h2 className='text-center display-4 mb-4'>{`${user.firstName} ${user.lastName}`}</h2>\r\n                                    <h5>Contact Information</h5>\r\n                                    <ul className='list-group list-group-flush'>\r\n                                        <li className='list-group-item'>\r\n                                            Phone Number:{' '}\r\n                                            {user.number === ''\r\n                                                ? 'None'\r\n                                                : user.number}\r\n                                        </li>\r\n                                        <li className='list-group-item'>\r\n                                            Email:{' '}\r\n                                            {user.email === ''\r\n                                                ? 'None'\r\n                                                : user.email}\r\n                                        </li>\r\n                                        <li className='list-group-item'>\r\n                                            Address:{' '}\r\n                                            {user.address === ''\r\n                                                ? 'None'\r\n                                                : user.address}\r\n                                        </li>\r\n                                    </ul>\r\n                                </div>\r\n                                <div className='col-2 justify-content-end'>\r\n                                    <Link\r\n                                        to='/editProfile'\r\n                                        className='btn btn-info'\r\n                                    >\r\n                                        Edit Profile\r\n                                    </Link>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <Tabs>\r\n                                <TabList>\r\n                                    <Tab>Appointments</Tab>\r\n                                </TabList>\r\n\r\n                                <TabPanel>\r\n                                    {/*<Service */}\r\n                                    {/*    services={stylist.services}*/}\r\n                                    {/*/>*/}\r\n                                </TabPanel>\r\n                            </Tabs>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default UserProfile;\r\n","import axios from \"axios\";\r\nimport setAuthToken from \"../utils/setAuthToken\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport {\r\n    GET_ERRORS,\r\n    SET_CURRENT_USER,\r\n    USER_LOADING\r\n} from \"./types\";\r\n// Register User\r\nconst api = \"http://localhost:8000\";\r\naxios.defaults.baseURL = api;\r\nexport const addService = (id, service) => dispatch => {\r\n    console.log(\"Calling add service 2.0ß\");\r\n    axios\r\n        .post(`/stylists/services/${id}/add`, service).then( res =>{console.log(res, \"res res res\")})\r\n        .catch(err =>\r\n            dispatch({\r\n                type: GET_ERRORS,\r\n                payload: err.response.data\r\n            })\r\n        );\r\n};\r\n\r\n\r\n\r\nexport const addAppointment = (id, appointment) => dispatch => {\r\n    axios\r\n    .post(`/appointments/${id}/add`, appointment)\r\n    .catch(err =>\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: err.response.data\r\n        })\r\n    );\r\n}; //soon will become add appooitment\r\n\r\n// Register Stylist\r\nexport const registerStylist = (userData, history) => dispatch => {\r\n    axios\r\n        .post(\"/stylists/register\", userData)\r\n        .then(() => history.push(\"/login\")) // re-direct to login on successful register\r\n        .catch(err =>\r\n            dispatch({\r\n                type: GET_ERRORS,\r\n                payload: err.response.data\r\n            })\r\n        );\r\n};\r\n\r\n//registerSylistUserWillBe updated once I figure out how to correctlyCheck the texas ID database\r\nexport const registerUserStylist = (userData, history) => dispatch => {\r\n    axios\r\n        .post(`/stylists/register/create`, userData)\r\n        .then(() => history.push(\"/stylists/stylistLanding\")) // re-direct to login on successful register\r\n        .catch(err =>\r\n            dispatch({\r\n                type: GET_ERRORS,\r\n                payload: err.response.data\r\n            })\r\n        );\r\n};\r\n// Change Password\r\nexport const changePassword = (userData, history) => dispatch => {\r\n    axios\r\n        .post(\"/users/changePassword\", userData)\r\n        .then(() => history.push(\"/home\")) // re-direct to home after changing password\r\n        .catch(err =>\r\n            dispatch({\r\n                type: GET_ERRORS,\r\n                payload: err.response.data\r\n            })\r\n        );\r\n};\r\nexport const login = userData => dispatch => {\r\n    if (userData.isStylist === true){\r\n        axios\r\n        .post(\"/stylists/login\", userData)\r\n        .then(res => {\r\n            // Save to localStorage\r\n// Set token to localStorage\r\n            // console.log(res.data)\r\n            const {token} = res.data;\r\n            localStorage.setItem(\"jwtToken\", token);\r\n\r\n            // Set token to Auth header\r\n            setAuthToken(token);\r\n            // Decode token to get user data\r\n            const decoded = jwt_decode(token);\r\n            // Set current user\r\n            dispatch(setCurrentUser(decoded));\r\n        })\r\n        .catch(err => {\r\n                dispatch({\r\n                    type: GET_ERRORS,\r\n                    payload: err.response.data\r\n                })\r\n            }\r\n        );\r\n    } else {\r\n    axios\r\n        .post(\"/users/login\", userData)\r\n        .then(res => {\r\n            // Save to localStorage\r\n// Set token to localStorage\r\n            // console.log(res.data)\r\n            const {token} = res.data;\r\n            localStorage.setItem(\"jwtToken\", token);\r\n\r\n            // Set token to Auth header\r\n            setAuthToken(token);\r\n            // Decode token to get user data\r\n            const decoded = jwt_decode(token);\r\n            // Set current user\r\n            dispatch(setCurrentUser(decoded));\r\n        })\r\n        .catch(err => {\r\n                dispatch({\r\n                    type: GET_ERRORS,\r\n                    payload: err.response.data\r\n                })\r\n            }\r\n        );\r\n    }\r\n};\r\n// Login - get user token\r\nexport const loginUser = userData => dispatch => {\r\n    axios\r\n        .post(\"/users/login\", userData)\r\n        .then(res => {\r\n            // Save to localStorage\r\n// Set token to localStorage\r\n            // console.log(res.data)\r\n            const {token} = res.data;\r\n            localStorage.setItem(\"jwtToken\", token);\r\n\r\n            // Set token to Auth header\r\n            setAuthToken(token);\r\n            // Decode token to get user data\r\n            const decoded = jwt_decode(token);\r\n            // Set current user\r\n            dispatch(setCurrentUser(decoded));\r\n        })\r\n        .catch(err => {\r\n                dispatch({\r\n                    type: GET_ERRORS,\r\n                    payload: err.response.data\r\n                })\r\n            }\r\n        );\r\n};\r\nexport const loginStylist = userData => dispatch => {\r\n    axios\r\n        .post(\"/stylists/login\", userData)\r\n        .then(res => {\r\n            // Save to localStorage\r\n// Set token to localStorage\r\n            // console.log(res.data)\r\n            const {token} = res.data;\r\n            localStorage.setItem(\"jwtToken\", token);\r\n\r\n            // Set token to Auth header\r\n            setAuthToken(token);\r\n            // Decode token to get user data\r\n            const decoded = jwt_decode(token);\r\n            // Set current user\r\n            dispatch(setCurrentUser(decoded));\r\n        })\r\n        .catch(err => {\r\n                dispatch({\r\n                    type: GET_ERRORS,\r\n                    payload: err.response.data\r\n                })\r\n            }\r\n        );\r\n};\r\n// Set logged in user\r\nexport const setCurrentUser = user => {\r\n    return {\r\n        type: SET_CURRENT_USER,\r\n        payload: user\r\n    };\r\n};\r\n// User loading\r\nexport const setUserLoading = () => {\r\n    return {\r\n        type: USER_LOADING\r\n    };\r\n};\r\n// Log user out\r\nexport const logoutUser = () => dispatch => {\r\n    // Remove token from local storage\r\n    localStorage.removeItem(\"jwtToken\");\r\n    // Remove auth header for future requests\r\n    setAuthToken(false);\r\n    // Set current user to empty object {} which will set isAuthenticated to false\r\n    dispatch(setCurrentUser({}));\r\n\r\n};","import React, {useEffect, useState} from 'react';\r\n\r\n\r\n\r\nconst AppointmentsCard = (props) => {\r\n\r\n    \r\n\r\nreturn (<>\r\n<div>     {console.log(props.appointments)}\r\n            <ul className=\"list-group\">\r\n                {props.appointments.map((appointment, index) =>\r\n                    <li key={index} className=\"list-group-item m-2\">\r\n                        <h2>{appointment.title}</h2>\r\n                        <p>Your appointment is with </p>\r\n                        <p>{appointment.startDate.toLocaleString()} to {appointment.endDate.toLocaleString()}</p>\r\n                        <p>Location: {appointment.location}</p>\r\n\r\n                    </li>\r\n                )}\r\n            </ul>\r\n        </div>\r\n</>\r\n)\r\n\r\n}\r\n\r\nexport default AppointmentsCard;","import React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useParams } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport Loading from '../loading';\r\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\r\nimport 'react-tabs/style/react-tabs.css';\r\nimport { CustomPlaceholder } from 'react-placeholder-image';\r\nimport ReviewBox from '../profile/reviewBox';\r\nimport Rating from '../rating/rating';\r\nimport { useInput } from '../hooks/InputHook';\r\nimport { addService } from '../../actions/stylistActions';\r\nimport AppointmentsCard from './appointmentsCard';\r\nconst appointments2 = [\r\n    {\r\n        title: 'Website Re-Design Plan',\r\n        startDate: new Date(2018, 5, 25, 9, 35),\r\n        endDate: new Date(2018, 5, 25, 11, 30),\r\n        id: 0,\r\n        location: 'Room 1',\r\n    },\r\n    {\r\n        title: 'Book Flights to San Fran for Sales Trip',\r\n        startDate: new Date(2018, 5, 25, 12, 11),\r\n        endDate: new Date(2018, 5, 25, 13, 0),\r\n        id: 1,\r\n        location: 'Room 1',\r\n    },\r\n    {\r\n        title: 'Install New Router in Dev Room',\r\n        startDate: new Date(2018, 5, 25, 14, 30),\r\n        endDate: new Date(2018, 5, 25, 15, 35),\r\n        id: 2,\r\n        location: 'Room 2',\r\n    },\r\n    {\r\n        title: 'Approve Personal Computer Upgrade Plan',\r\n        startDate: new Date(2018, 5, 26, 10, 0),\r\n        endDate: new Date(2018, 5, 26, 11, 0),\r\n        id: 3,\r\n        location: 'Room 2',\r\n    },\r\n    {\r\n        title: 'Final Budget Review',\r\n        startDate: new Date(2018, 5, 26, 12, 0),\r\n        endDate: new Date(2018, 5, 26, 13, 35),\r\n        id: 4,\r\n        location: 'Room 2',\r\n    },\r\n    {\r\n        title: 'New Brochures',\r\n        startDate: new Date(2018, 5, 26, 14, 30),\r\n        endDate: new Date(2018, 5, 26, 15, 45),\r\n        id: 5,\r\n        location: 'Room 2',\r\n    },\r\n    {\r\n        title: 'Install New Database',\r\n        startDate: new Date(2018, 5, 27, 9, 45),\r\n        endDate: new Date(2018, 5, 27, 11, 15),\r\n        id: 6,\r\n        location: 'Room 1',\r\n    },\r\n    {\r\n        title: 'Approve New Online Marketing Strategy',\r\n        startDate: new Date(2018, 5, 27, 12, 0),\r\n        endDate: new Date(2018, 5, 27, 14, 0),\r\n        id: 7,\r\n        location: 'Room 3',\r\n    },\r\n    {\r\n        title: 'Upgrade Personal Computers',\r\n        startDate: new Date(2018, 5, 27, 15, 15),\r\n        endDate: new Date(2018, 5, 27, 16, 30),\r\n        id: 8,\r\n        location: 'Room 3',\r\n    },\r\n    {\r\n        title: 'Customer Workshop',\r\n        startDate: new Date(2018, 5, 28, 11, 0),\r\n        endDate: new Date(2018, 5, 28, 12, 0),\r\n        id: 9,\r\n        location: 'Room 3',\r\n    },\r\n    {\r\n        title: 'Prepare 2015 Marketing Plan',\r\n        startDate: new Date(2018, 5, 28, 11, 0),\r\n        endDate: new Date(2018, 5, 28, 13, 30),\r\n        id: 10,\r\n        location: 'Room 1',\r\n    },\r\n    {\r\n        title: 'Brochure Design Review',\r\n        startDate: new Date(2018, 5, 28, 14, 0),\r\n        endDate: new Date(2018, 5, 28, 15, 30),\r\n        id: 11,\r\n        location: 'Room 2',\r\n    },\r\n    {\r\n        title: 'Create Icons for Website',\r\n        startDate: new Date(2018, 5, 29, 10, 0),\r\n        endDate: new Date(2018, 5, 29, 11, 30),\r\n        id: 12,\r\n        location: 'Room 2',\r\n    },\r\n    {\r\n        title: 'Upgrade Server Hardware',\r\n        startDate: new Date(2018, 5, 29, 14, 30),\r\n        endDate: new Date(2018, 5, 29, 16, 0),\r\n        id: 13,\r\n        location: 'Room 3',\r\n    },\r\n    {\r\n        title: 'Submit New Website Design',\r\n        startDate: new Date(2018, 5, 29, 16, 30),\r\n        endDate: new Date(2018, 5, 29, 18, 0),\r\n        id: 14,\r\n        location: 'Room 3',\r\n    },\r\n    {\r\n        title: 'Launch New Website',\r\n        startDate: new Date(2018, 5, 29, 12, 20),\r\n        endDate: new Date(2018, 5, 29, 14, 0),\r\n        id: 15,\r\n        location: 'Room 2',\r\n    },\r\n    {\r\n        title: 'Website Re-Design Plan',\r\n        startDate: new Date(2018, 6, 2, 9, 30),\r\n        endDate: new Date(2018, 6, 2, 15, 30),\r\n        id: 16,\r\n        location: 'Room 1',\r\n    },\r\n    {\r\n        title: 'Book Flights to San Fran for Sales Trip',\r\n        startDate: new Date(2018, 6, 2, 12, 0),\r\n        endDate: new Date(2018, 6, 2, 13, 0),\r\n        id: 17,\r\n        location: 'Room 3',\r\n    },\r\n    {\r\n        title: 'Install New Router in Dev Room',\r\n        startDate: new Date(2018, 6, 2, 14, 30),\r\n        endDate: new Date(2018, 6, 2, 17, 30),\r\n        id: 18,\r\n        location: 'Room 2',\r\n    },\r\n    {\r\n        title: 'Approve Personal Computer Upgrade Plan',\r\n        startDate: new Date(2018, 6, 2, 16, 0),\r\n        endDate: new Date(2018, 6, 3, 9, 0),\r\n        id: 19,\r\n        location: 'Room 2',\r\n    },\r\n    {\r\n        title: 'Final Budget Review',\r\n        startDate: new Date(2018, 6, 3, 10, 15),\r\n        endDate: new Date(2018, 6, 3, 13, 35),\r\n        id: 20,\r\n        location: 'Room 1',\r\n    },\r\n    {\r\n        title: 'New Brochures',\r\n        startDate: new Date(2018, 6, 3, 14, 30),\r\n        endDate: new Date(2018, 6, 3, 15, 45),\r\n        id: 21,\r\n        location: 'Room 3',\r\n    },\r\n    {\r\n        title: 'Install New Database',\r\n        startDate: new Date(2018, 6, 3, 15, 45),\r\n        endDate: new Date(2018, 6, 4, 12, 15),\r\n        id: 22,\r\n        location: 'Room 3',\r\n    },\r\n    {\r\n        title: 'Approve New Online Marketing Strategy',\r\n        startDate: new Date(2018, 6, 4, 12, 35),\r\n        endDate: new Date(2018, 6, 4, 14, 15),\r\n        id: 23,\r\n        location: 'Room 3',\r\n    },\r\n    {\r\n        title: 'Upgrade Personal Computers',\r\n        startDate: new Date(2018, 6, 4, 15, 15),\r\n        endDate: new Date(2018, 6, 4, 20, 30),\r\n        id: 24,\r\n        location: 'Room 2',\r\n    },\r\n    {\r\n        title: 'Customer Workshop',\r\n        startDate: new Date(2018, 6, 5, 6, 0),\r\n        endDate: new Date(2018, 6, 5, 14, 20),\r\n        id: 25,\r\n        location: 'Room 1',\r\n    },\r\n    {\r\n        title: 'Customer Workshop',\r\n        startDate: new Date(2018, 6, 5, 14, 35),\r\n        endDate: new Date(2018, 6, 5, 16, 20),\r\n        id: 26,\r\n        location: 'Room 1',\r\n    },\r\n    {\r\n        title: 'Customer Workshop 2',\r\n        startDate: new Date(2018, 6, 5, 10, 0),\r\n        endDate: new Date(2018, 6, 5, 11, 20),\r\n        id: 27,\r\n        location: 'Room 2',\r\n    },\r\n    {\r\n        title: 'Service Name ',\r\n        startDate: new Date(2018, 6, 5, 20, 0),\r\n        endDate: new Date(2018, 6, 6, 13, 30),\r\n        id: 28,\r\n        location: 'Room 3',\r\n    },\r\n    {\r\n        title: 'Brochure Design Review',\r\n        startDate: new Date(2018, 6, 6, 14, 10),\r\n        endDate: new Date(2018, 6, 6, 15, 30),\r\n        id: 29,\r\n        location: 'Room 3',\r\n    },\r\n    {\r\n        title: 'Create Icons for Website',\r\n        startDate: new Date(2018, 6, 6, 10, 0),\r\n        endDate: new Date(2018, 6, 7, 14, 30),\r\n        id: 30,\r\n        location: 'Room 1',\r\n    },\r\n    {\r\n        title: 'Upgrade Server Hardware',\r\n        startDate: new Date(2018, 6, 3, 9, 30),\r\n        endDate: new Date(2018, 6, 3, 12, 25),\r\n        id: 31,\r\n        location: 'Room 2',\r\n    },\r\n    {\r\n        title: 'Submit New Website Design',\r\n        startDate: new Date(2018, 6, 3, 12, 30),\r\n        endDate: new Date(2018, 6, 3, 18, 0),\r\n        id: 32,\r\n        location: 'Room 2',\r\n    },\r\n    {\r\n        title: 'Launch New Website',\r\n        startDate: new Date(2018, 6, 3, 12, 20),\r\n        endDate: new Date(2018, 6, 3, 14, 10),\r\n        id: 33,\r\n        location: 'Room 2',\r\n    },\r\n    {\r\n        title: 'Book Flights to San Fran for Sales Trip',\r\n        startDate: new Date(2018, 5, 26, 0, 0),\r\n        endDate: new Date(2018, 5, 27, 0, 0),\r\n        id: 34,\r\n        location: 'Room 1',\r\n    },\r\n    {\r\n        title: 'Customer Workshop',\r\n        startDate: new Date(2018, 5, 29, 10, 0),\r\n        endDate: new Date(2018, 5, 30, 14, 30),\r\n        id: 35,\r\n        location: 'Room 1',\r\n    },\r\n    {\r\n        title: 'Google AdWords Strategy',\r\n        startDate: new Date(2018, 6, 3, 0, 0),\r\n        endDate: new Date(2018, 6, 4, 10, 30),\r\n        id: 36,\r\n        location: 'Room 3',\r\n    },\r\n    {\r\n        title: 'Rollout of New Website and Marketing Brochures',\r\n        startDate: new Date(2018, 6, 5, 10, 0),\r\n        endDate: new Date(2018, 6, 9, 14, 30),\r\n        id: 37,\r\n        location: 'Room 3',\r\n    },\r\n    {\r\n        title: 'Update NDA Agreement',\r\n        startDate: new Date(2018, 6, 1, 10, 0),\r\n        endDate: new Date(2018, 6, 3, 14, 30),\r\n        id: 38,\r\n        location: 'Room 2',\r\n    },\r\n    {\r\n        title: 'Customer Workshop',\r\n        startDate: new Date(2018, 6, 1),\r\n        endDate: new Date(2018, 6, 2),\r\n        allDay: true,\r\n        id: 39,\r\n        location: 'Room 1',\r\n    },\r\n];\r\n// filter appointments to see only those where start date is after current date\r\n//we need to measure minutes on this one if yyyy-mm-dd === currentDate\r\n//past Appointments is just the flip side of this\r\nconst UpcomingApppointments = () => {\r\n    const [stylist, setStylist] = useState({});\r\n    const stylistId = useParams();\r\n    const currentDate = new Date();\r\n    // const currentDate = new Date(2018, 6, 3, 15, 45);\r\n    const URL = `http://localhost:8000/api`;\r\n    const { value: name, bind: bindName, reset: resetName } = useInput('');\r\n    const {\r\n        value: description,\r\n        bind: bindDescription,\r\n        reset: resetDescription,\r\n    } = useInput('');\r\n    const { value: price, bind: bindPrice, reset: resetPrice } = useInput('');\r\n    const {\r\n        value: category,\r\n        bind: bindCateogry,\r\n        reset: resetCategory,\r\n    } = useInput('');\r\n    // const appointments = stylist.appointments.filter(event => event.startDate >= currentDate);\r\n    useEffect(() => {\r\n        const fetchStylist = async () => {\r\n            await axios.get(`${URL}/stylists/${stylistId.id}`).then(res => {\r\n                const stylistData = res.data.stylist;\r\n                setStylist(stylistData);\r\n            });\r\n        };\r\n        fetchStylist();\r\n    }, [stylist]);\r\n    const appointments = appointments2.filter(\r\n        event => event.startDate >= currentDate\r\n    );\r\n\r\n    if (stylist && appointments && appointments.length > 0) {\r\n        console.log(appointments);\r\n        return (\r\n            <div className='Services text-center'>\r\n                <h5 className='card-title display-4'>\r\n                    {' '}\r\n                    Upcoming Apppointments{' '}\r\n                </h5>\r\n                <AppointmentsCard\r\n                    appointments={appointments}\r\n                    currentDate={currentDate}\r\n                />\r\n                {/* <div className='card'>\r\n            {appointments.map((appointment, i) => (\r\n                <div className='m-3' key={i}>\r\n                    <div className='h3'>Appointment {i}</div>\r\n                    <p> {appointment.startDate.toLocaleString()}</p>\r\n                    <p> {appointment.endDate.toLocaleString()}</p>\r\n                    <p> {appointment.location}</p>\r\n                    <p> {appointment.id}</p>\r\n                    <p>{currentDate.toLocaleDateString()}</p>\r\n                </div>\r\n            ))}\r\n        </div> */}\r\n            </div>\r\n        );\r\n    } else {\r\n        return (\r\n            <div>There are no upcoming appointments. Please add one Below!</div>\r\n        );\r\n    }\r\n};\r\nexport default UpcomingApppointments;\r\n","import UserLanding from \"./components/landing/userLanding\";\r\nimport StylistsList from \"./components/search/stylistsList\";\r\nimport ChangePassword from \"./components/changePassword\";\r\nimport StylistProfile from \"./components/profile/stylistProfile\";\r\nimport EditProfile from \"./components/profile/editProfile\";\r\nimport SendPassword from \"./components/sendPassword\";\r\nimport StylistLanding from \"./components/stylistLanding\";\r\nimport ServicesOffered from \"./components/stylist/servicesOffered\";\r\n import StylistCalendar from \"./components/stylist/stylistCalendar\";\r\nimport UserProfile from \"./components/profile/userProfile\";\r\nimport UpcomingApppointments from \"./components/stylist/upcomingAppointments\";\r\nimport PastAppointments from \"./components/stylist/pastApointments\";\r\n\r\nexport const ROUTES = [\r\n    {path: \"/editProfile\", component: EditProfile},\r\n    {path: \"/userProfile\", component: UserProfile},\r\n    {path: \"/userLanding\", component: UserLanding},\r\n    {path: \"/stylists/search/:types/:queries\", component: StylistsList},\r\n    {path: \"/changePassword/:id\", component: ChangePassword},\r\n    {path: \"/stylist/stylistId=:id\", component: StylistProfile},\r\n    {path: \"/resetPassword\", component: SendPassword},\r\n    {path: \"/stylists/stylistLanding/stylistId=:id\", component: StylistLanding},\r\n    {path: \"/services/servicesOffered/stylistId=:id\", component: ServicesOffered},\r\n    {path: \"/stylists/stylistCalendar/stylistId=:id\", component: StylistCalendar},\r\n    {path: \"/stylists/appointments/upcoming/stylistId=:id\", component: UpcomingApppointments},\r\n    {path: \"/stylists/appointments/past/stylistId=:id\", component: PastAppointments}\r\n\r\n]","import React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useParams } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport Loading from '../loading';\r\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\r\nimport 'react-tabs/style/react-tabs.css';\r\nimport { CustomPlaceholder } from 'react-placeholder-image';\r\nimport ReviewBox from '../profile/reviewBox';\r\nimport Rating from '../rating/rating';\r\nimport { useInput } from '../hooks/InputHook';\r\nimport { addService } from '../../actions/stylistActions';\r\nimport AppointmentsCard from './appointmentsCard';\r\n// filter appointments to see only those where start date is after current date\r\n//we need to measure minutes on this one if yyyy-mm-dd === currentDate\r\n//past Appointments is just the flip side of this\r\nconst PastAppointments = () => {\r\n    const [stylist, setStylist] = useState({});\r\n    const stylistId = useParams();\r\n    const currentDate = new Date();\r\n    // const currentDate = new Date(2018, 6, 3, 15, 45);\r\n    const URL = `http://localhost:8000/api`;\r\n    const { value: name, bind: bindName, reset: resetName } = useInput('');\r\n    const {\r\n        value: description,\r\n        bind: bindDescription,\r\n        reset: resetDescription,\r\n    } = useInput('');\r\n    const { value: price, bind: bindPrice, reset: resetPrice } = useInput('');\r\n    const {\r\n        value: category,\r\n        bind: bindCateogry,\r\n        reset: resetCategory,\r\n    } = useInput('');\r\n    useEffect(() => {\r\n        const fetchStylist = async () => {\r\n            await axios.get(`${URL}/stylists/${stylistId.id}`).then(res => {\r\n                const stylistData = res.data.stylist;\r\n                setStylist(stylistData);\r\n            });\r\n        };\r\n        fetchStylist();\r\n    }, [stylist]);\r\n    // const appointments =  appointments2.filter(event => event.startDate <= currentDate);\r\n    let appointments;\r\n    if (stylist && stylist.appointments && stylist.appointments.length > 0) {\r\n        appointments = stylist.appointments.filter(\r\n            event => event.startDate <= currentDate\r\n        );\r\n    }\r\n\r\n    if (stylist && appointments && appointments.length > 0) {\r\n        console.log(appointments);\r\n        return (\r\n            <div className='Services text-center border border-primary'>\r\n                <h5 className='card-title display-4'> Past Apppointments </h5>\r\n                <AppointmentsCard\r\n                    appointments={appointments}\r\n                    currentDate={currentDate}\r\n                />\r\n            </div>\r\n        );\r\n    } else {\r\n        return (\r\n            <div>There are no upcoming appointments. Please add one Below!</div>\r\n        );\r\n    }\r\n};\r\nexport default PastAppointments;\r\n","import React from 'react';\r\nimport './App.css';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport { Provider, useDispatch } from 'react-redux';\r\nimport { setCurrentUser, logoutUser } from './actions/authActions';\r\nimport jwt_decode from 'jwt-decode';\r\nimport PrivateRoute from './components/PrivateRoute';\r\nimport Navigation from './components/navigation';\r\nimport Landing from './components/landing';\r\nimport Login from './components/login/login';\r\nimport RegisterUser from './components/register/registerUser';\r\nimport RegisterStylist from './components/register/registerStylist';\r\nimport setAuthToken from './utils/setAuthToken';\r\nimport store from './store';\r\nimport { ROUTES } from './routes';\r\nimport SendPassword from './components/sendPassword';\r\nimport ChangePassword from './components/changePassword';\r\nimport StylistsList from './components/search/stylistsList';\r\n\r\n// Check for token to keep user logged in\r\nif (localStorage.jwtToken) {\r\n    // Set auth token header auth\r\n    const token = localStorage.jwtToken;\r\n    setAuthToken(token);\r\n    // Decode token and get user info and exp\r\n    const decoded = jwt_decode(token);\r\n    // Set user and isAuthenticated\r\n    store.dispatch(setCurrentUser(decoded));\r\n    // Check for expired token\r\n    const currentTime = Date.now() / 1000; // to get in milliseconds\r\n    if (decoded.exp < currentTime) {\r\n        // Logout user\r\n        store.dispatch(logoutUser());\r\n        // Redirect to login\r\n        window.location.href = '/login';\r\n    }\r\n}\r\n\r\nfunction App() {\r\n    return (\r\n        <Provider store={store}>\r\n            <div className='App'>\r\n                <Navigation />\r\n                <Router>\r\n                    <Route exact path='/' component={Landing} />\r\n                    <Route exact path='/home' component={Landing} />\r\n                    <Route exact path='/login' component={Login} />\r\n                    <Route\r\n                        exact\r\n                        path='/user/register'\r\n                        component={RegisterUser}\r\n                    />\r\n                    <Route\r\n                        exact\r\n                        path='/stylist/register'\r\n                        component={RegisterStylist}\r\n                    />\r\n                    <Route\r\n                        exact\r\n                        path='/resetPassword'\r\n                        component={SendPassword}\r\n                    />\r\n                    <Switch>\r\n                        {ROUTES.map((route, i) => (\r\n                            <PrivateRoute key={i} {...route} />\r\n                        ))}\r\n                    </Switch>\r\n                </Router>\r\n            </div>\r\n        </Provider>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n// Importing the Bootstrap CSS\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}